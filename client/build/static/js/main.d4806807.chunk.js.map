{"version":3,"sources":["utils/api.js","components/DeleteAccount/index.js","components/Sidebar/index.js","utils/googleOauth.js","components/SignUp/index.js","utils/sessionContext.js","components/Login/index.js","components/Navbar/index.js","components/About/index.js","components/LearnMore/index.js","components/GetStarted/index.js","components/Accords/index.js","pages/Home.js","components/WalletCoins/index.js","components/TransHist/index.js","pages/Profile.js","components/SendForm/index.js","components/WalletCoinsSend/index.js","pages/Send.js","components/MiningHero/index.js","pages/Mining.js","components/Footer/index.js","App.js","index.js"],"names":["data","axios","post","get","delete","DeleteAccount","useState","show","setShow","handleClose","showConfirm","setShowConfirm","handleCloseConfirm","showSuccess","setShowSuccess","handleCloseSuccess","document","location","replace","showFailure","setShowFailure","handleCloseFailure","handleShowFailure","handleSubmit","e","preventDefault","privateKey","target","value","API","then","res","status","catch","err","response","Button","className","variant","onClick","block","Modal","onHide","backdrop","keyboard","Header","Title","Body","style","color","Footer","Form","id","onSubmit","Group","Label","fontSize","Control","type","placeholder","Text","fontWeight","Sidebar","marginTop","marginBottom","href","stringifiedParams","queryString","client_id","redirect_uri","scope","join","response_type","access_type","prompt","urlParams","window","search","code","url","method","client_secret","grant_type","access_token","headers","Authorization","error","console","log","getAccessTokenFromCode","getGoogleUserInfo","userInfo","email","name","split","result","message","user","reload","SignUpForm","copied","setCopied","private_key","setPrivate","showCopyAlert","setCopyAlert","showCopyAlertMessage","setShowCopyAlertMessage","showAlert","setShowAlert","showAlertMessage","setShowAlertMessage","handleAlertMessage","handleShow","useEffect","Alert","dismissible","onClose","submitData","username","password","confirm_password","public_key","controlId","InputGroup","readOnly","Append","navigator","clipboard","writeText","xmlns","width","height","fill","class","viewBox","d","SessionContext","React","createContext","publicKey","logged_in","setSession","useContext","Navigation","sidebarOpen","setSidebarOpen","loginComponent","setLoginComponent","handleLogout","onSetSidebarOpen","open","setTimeout","setSidebarState","buttons","Consumer","state","onSetOpen","sidenav","SignUp","Login","Navbar","Container","Nav","Item","to","fillRule","title","body","Row","Col","md","src","alt","About","isMobile","Card","Accordion","Toggle","as","eventKey","Collapse","LearnMore","GetStarted","textAlign","Accords","defaultActiveKey","Home","WalletCoins","coin","setCoin","getUserBalance","float","FormControl","TransHist","transactions","setTransactions","headerSortingStyle","backgroundColor","count","forEach","time","key","timestamp","Date","toLocaleString","fromAddress","amount","toAddress","finalRes","columns","dataField","text","sort","sortCaret","order","column","expandRow","renderer","row","label","showExpandColumn","expandHeaderColumnRenderer","isAnyExpands","expandColumnRenderer","expanded","length","marginLeft","keyField","pagination","paginationFactory","defaultSorted","striped","hover","condensed","Profile","SendForm","formHandle","useRef","cost","coinVal","setCoinVal","coinAmount","setCoinAmount","toggle","setToggle","usdVal","setUSDVal","usdAmount","setUSDAmount","fees","setFees","total","setTotal","showAlertVariant","setShowAlertVariant","div","getValue","fee","parseInt","getUSD","usd","toggleListener","boolean","val","padding","ref","span","offset","onFocus","onChange","current","reduce","obj","input","getAttribute","from","Object","values","a","c","getElementById","reset","WalletCoinsUser","Send","MiningHero","timer","setTimer","isActive","setIsActive","countRef","showFail","setShowFail","handleCloseFail","getSeconds","slice","minutes","Math","floor","getMinutes","formatTime","setInterval","clearInterval","MiningPage","bg","rel","App","props","setState","this","Provider","exact","path","component","Mining","Component","ReactDOM","render","StrictMode"],"mappings":"olBAGe,EACA,SAAUA,GACrB,OAAOC,IAAMC,KAAK,mBAAoBF,EACxC,EAHa,EAIL,SAAUA,GAChB,OAAOC,IAAMC,KAAK,cAAeF,EACnC,EANa,EAOL,WACN,OAAOC,IAAMC,KAAK,cACpB,EATa,EAUN,SAAUF,GACf,OAAOC,IAAMC,KAAK,aAAcF,EAClC,EAZa,EAaM,SAAUA,GAC3B,OAAOC,IAAME,IAAI,2BAA6BH,EAChD,EAfa,EAgBQ,SAAUA,GAC7B,OAAOC,IAAME,IAAI,gCAAkCH,EACrD,EAlBa,EAmBA,SAAUA,GACrB,OAAOC,IAAME,IAAI,iBAAmBH,EACtC,EArBa,EAsBI,SAAUA,GACzB,OAAOC,IAAMC,KAAK,+BAAgCF,EACpD,EAxBa,EAyBA,SAAUA,GACrB,OAAOC,IAAME,IAAI,gBACnB,EA3Ba,EA4BS,SAAUH,GAC9B,OAAOC,IAAMG,OAAO,eAAiBJ,EACvC,EA9Ba,EA+BL,SAAUA,GAChB,OAAOC,IAAME,IAAI,4BACnB,EAjCa,EAkCA,WACX,OAAOF,IAAME,IAAI,uBACnB,E,gBCyIaE,MA3Kf,WAEE,MAAwBC,oBAAS,GAAM,mBAAhCC,EAAI,KAAEC,EAAO,KACdC,EAAc,WAAH,OAASD,GAAQ,EAAO,EAIzC,EAAsCF,oBAAS,GAAM,mBAA9CI,EAAW,KAAEC,EAAc,KAC5BC,EAAqB,WAAH,OAASD,GAAe,EAAO,EAIvD,EAAsCL,oBAAS,GAAM,mBAA9CO,EAAW,KAAEC,EAAc,KAC5BC,EAAqB,WACzBD,GAAe,GACfE,SAASC,SAASC,QAAQ,IAC5B,EAIA,EAAsCZ,oBAAS,GAAM,mBAA9Ca,EAAW,KAAEC,EAAc,KAC5BC,EAAqB,WAAH,OAASD,GAAe,EAAO,EACjDE,EAAoB,WAAH,OAASF,GAAe,EAAM,EAG/CG,EAAe,SAACC,GACpBA,EAAEC,iBACF,IAAMC,EAAaF,EAAEG,OAAO,GAAGC,MAE1BF,GACHJ,IAGFO,EAAyBH,GACtBI,MAAK,SAACC,GACc,MAAfA,EAAIC,QAlBkBlB,GAAe,EAuB3C,IACCmB,OAAM,SAACC,GACsB,MAAxBA,EAAIC,SAASH,QAEfV,GAEJ,IAEFV,GACF,EAEA,OACE,qCAEE,cAACwB,EAAA,EAAM,CACLC,UAAU,YACVC,QAAQ,iBACRC,QArDa,WAAH,OAAS/B,GAAQ,EAAM,EAsDjCgC,OAAK,8BAMP,eAACC,EAAA,EAAK,CACJlC,KAAMA,EACNmC,OAAQjC,EACRkC,SAAS,SACTC,UAAU,EAAM,UAEhB,cAACH,EAAA,EAAMI,OAAM,UACX,cAACJ,EAAA,EAAMK,MAAK,UACV,oDAGJ,cAACL,EAAA,EAAMM,KAAI,UACT,oBAAIC,MAAO,CAAEC,MAAO,OAAQ,6DAI9B,eAACR,EAAA,EAAMS,OAAM,WAEX,cAACd,EAAA,EAAM,CAACG,QAAS9B,EAAY,oBAC7B,cAAC2B,EAAA,EAAM,CACLG,QAAS,WAEP9B,IA7EoBE,GAAe,EA+ErC,EAAE,2BAQR,eAAC8B,EAAA,EAAK,CACJlC,KAAMG,EACNgC,OAAQ9B,EACR+B,SAAS,SACTC,UAAU,EAAM,UAEhB,cAACH,EAAA,EAAMI,OAAM,UACX,cAACJ,EAAA,EAAMK,MAAK,UACV,4DAGJ,eAACK,EAAA,EAAI,CAACC,GAAG,aAAaC,SAAU,SAAC7B,GAAC,OAAKD,EAAaC,EAAE,EAAC,UACrD,cAACiB,EAAA,EAAMM,KAAI,UACT,eAACI,EAAA,EAAKG,MAAK,WACT,cAACH,EAAA,EAAKI,MAAK,CAACP,MAAO,CAAEQ,SAAU,IAAK,oEAGpC,cAACL,EAAA,EAAKM,QAAO,CAACC,KAAK,OAAOC,YAAY,gBACtC,cAACR,EAAA,EAAKS,KAAI,CAACZ,MAAO,CAAEC,MAAO,MAAOY,WAAY,QAAS,sDAK3D,eAACpB,EAAA,EAAMS,OAAM,WACX,cAACd,EAAA,EAAM,CAACG,QAAS3B,EAAmB,oBACpC,cAACwB,EAAA,EAAM,CAACgB,GAAG,aAAaM,KAAK,SAAQ,8BAQ3C,eAACjB,EAAA,EAAK,CACJlC,KAAMM,EACN6B,OAAQ3B,EACR4B,SAAS,SACTC,UAAU,EAAM,UAEhB,cAACH,EAAA,EAAMI,OAAM,UACX,cAACJ,EAAA,EAAMK,MAAK,UACV,oEAGJ,cAACL,EAAA,EAAMM,KAAI,UACT,oEAEF,cAACN,EAAA,EAAMS,OAAM,UACX,cAACd,EAAA,EAAM,CAACG,QAASxB,EAAmB,wBAKxC,eAAC0B,EAAA,EAAK,CACJlC,KAAMY,EACNuB,OAAQrB,EACRsB,SAAS,SACTC,UAAU,EAAM,UAEhB,cAACH,EAAA,EAAMI,OAAM,UACX,cAACJ,EAAA,EAAMK,MAAK,UACV,kFAGJ,cAACL,EAAA,EAAMM,KAAI,UACT,gFAEF,cAACN,EAAA,EAAMS,OAAM,UACX,cAACd,EAAA,EAAM,CAACG,QAASlB,EAAmB,0BAK9C,E,OChIeyC,MAzCf,WACE,OACE,gCACE,oBACEzB,UAAU,iBACVW,MAAO,CAAEe,UAAW,GAAIC,aAAc,GAAIf,MAAO,cAAe,yBAKlE,cAACb,EAAA,EAAM,CACLC,UAAU,aACV4B,KAAK,WACLzB,OAAK,EACLF,QAAQ,gBAAe,qBAWzB,cAACF,EAAA,EAAM,CAACC,UAAU,aAAa4B,KAAK,QAAQzB,OAAK,EAACF,QAAQ,gBAAe,kBAGzE,cAACF,EAAA,EAAM,CACLC,UAAU,aACV4B,KAAK,UACLzB,OAAK,EACLF,QAAQ,gBAAe,uBAIzB,cAAC,EAAa,CAACE,OAAK,MAG1B,E,yCCxCM0B,EAAoBC,YAAsB,CAC9CC,UAAW,2EACXC,aAAc,+CACdC,MAAO,CACL,iDACA,oDACAC,KAAK,KACPC,cAAe,OACfC,YAAa,UACbC,OAAQ,YAKJC,GAFqB,uDAAmDT,GAE5DC,QAAkBS,OAAO3D,SAAS4D,SA8Bf,aAalC,OAbkC,kCAArC,WAAsCC,GAAI,mGACf7E,IAAM,CAC3B8E,IAAI,sCACJC,OAAQ,OACRhF,KAAM,CACJoE,UAAW,2EACXa,cAAe,2BACfZ,aAAc,gCACda,WAAY,qBACZJ,UAED,KAAD,EAVU,OAUV,SAVM9E,EAAI,EAAJA,KAAI,kBAWLA,EAAKmF,cAAY,4CACzB,sBAE+B,aAS/B,OAT+B,kCAAhC,WAAiCA,GAAY,mGACpBlF,IAAM,CAC3B8E,IAAK,gDACLC,OAAQ,MACRI,QAAS,CACPC,cAAc,UAAD,OAAYF,MAE1B,KAAD,EANU,OAMV,SANMnF,EAAI,EAAJA,KAAI,kBAOLA,GAAI,4CACZ,sBApDC2E,EAAUW,MACZC,QAAQC,IAAI,sBAAD,OAAuBb,EAAUW,QACpCX,EAAUG,MAwBnB,SAEqC,GAAD,+BAzBlCW,CAAuBd,EAAUG,MACjChD,MAAK,SAACC,IAqCL,SAE+B,GAAD,gCAtC9B2D,CAAkB3D,GACjBD,MAAK,SAAC6D,GACH,IAAM3F,EAAO,CACToD,GAAIuC,EAASvC,GACbwC,MAAOD,EAASC,MAChBC,KAAMF,EAASE,KAAKC,MAAM,KAAKvB,KAAK,KAExC1C,EAAgB7B,GACf8B,MAAK,SAACiE,GACFA,EAAO/F,KAAKgG,UACbT,QAAQC,IAAIO,EAAO/F,KAAKgG,SACvBtE,EAAaqE,EAAO/F,KAAKgG,SAGzBD,EAAO/F,KAAKiG,MACbrB,OAAO3D,SAASiF,QAEpB,GACJ,GACF,IA8BO,IAAIxE,EAAa,G,OCuJXyE,MA1Nf,WACE,MAAwB7F,oBAAS,GAAM,mBAAhCC,EAAI,KAAEC,EAAO,KACpB,EAA4BF,oBAAS,GAAM,mBAApC8F,EAAM,KAAEC,EAAS,KACxB,EAAkC/F,mBAAS,IAAG,mBAAvCgG,EAAW,KAAEC,EAAU,KAG9B,EAAsCjG,oBAAS,GAAM,mBAA9CkG,EAAa,KAAEC,EAAY,KAClC,EAAwDnG,mBAAS,IAAG,mBAA7DoG,EAAoB,KAAEC,EAAuB,KACpD,EAAkCrG,oBAAS,GAAM,mBAA1CsG,EAAS,KAAEC,EAAY,KAC9B,EAAgDvG,mBAAS,IAAG,mBAArDwG,EAAgB,KAAEC,EAAmB,KAUtCC,EAAqB,SAAChB,GACtBA,IACFa,GAAa,GACbE,EAAoBf,GAExB,EACMiB,EAAa,WAAH,OAASzG,GAAQ,EAAM,EAEvC0G,qBAAU,WACJxF,IACF6E,EAAW7E,GACXuF,IAEJ,GAAG,IAEH,IAAMxG,EAAc,YACH,IAAX2F,GACF5F,GAAQ,GACRQ,SAASC,SAASC,QAAQ,YAC1BqF,EAAW,MAEXE,GAAa,GACbE,EAAwB,yBAE5B,EAqDA,OACE,qCACE,cAACQ,EAAA,EAAK,CACJ5G,KAAMqG,EACNtE,QAAQ,UACR8E,YAAY,OACZC,QAAS,WA3FbR,GAAa,GACbE,EAAoB,GA4FhB,EAAE,SAEF,4BAAID,MAGN,qBACEzE,UAAU,iBACVW,MAAO,CAAEe,UAAW,GAAIC,aAAc,GAAIf,MAAO,cAAe,SAEhE,2CAGF,eAACE,EAAA,EAAI,CAACE,SAAU,SAAC7B,GAAC,OAlED,SAACA,GACpBA,EAAEC,iBAEF,IAAM6F,EAAa,CACjBC,SAAU/F,EAAEG,OAAO,GAAGC,MACtB4F,SAAUhG,EAAEG,OAAO,GAAGC,MACtB6F,iBAAkBjG,EAAEG,OAAO,GAAGC,MAC9BgE,MAAOpE,EAAEG,OAAO,GAAGC,MACnB8F,WAAY,gBAEd7F,EAAWyF,GACRxF,MAAK,SAACC,GACc,MAAfA,EAAIC,SACNuE,EAAWxE,EAAI/B,KAAKgG,SACpBiB,IAEJ,IACChF,OAAM,SAACC,GACN,OAAQA,EAAIC,SAASnC,KAAKgG,SACxB,IAAK,iDAGL,IAAK,iDAGL,IAAK,gCAGL,IAAK,wBAGL,IAAK,2BACHgB,EAAmB9E,EAAIC,SAASnC,KAAKgG,SACrC,MAEF,IAAK,gBACHgB,EACE,sDAEF,MACF,QACEA,EAAmB,sBAEzB,GACJ,CAsB2BzF,CAAaC,EAAE,EAAC,UACrC,cAAC2B,EAAA,EAAKG,MAAK,CAACqE,UAAU,iBAAgB,SACpC,cAACxE,EAAA,EAAKM,QAAO,CAACC,KAAK,QAAQC,YAAY,kBAEzC,cAACR,EAAA,EAAKG,MAAK,CAACqE,UAAU,oBAAmB,SACvC,cAACxE,EAAA,EAAKM,QAAO,CAACC,KAAK,OAAOC,YAAY,qBAExC,cAACR,EAAA,EAAKG,MAAK,CAACqE,UAAU,oBAAmB,SACvC,cAACxE,EAAA,EAAKM,QAAO,CAACC,KAAK,WAAWC,YAAY,cAE5C,cAACR,EAAA,EAAKG,MAAK,CAACqE,UAAU,mBAAkB,SACtC,cAACxE,EAAA,EAAKM,QAAO,CAACC,KAAK,WAAWC,YAAY,uBAE5C,cAACvB,EAAA,EAAM,CACLsB,KAAK,SACL9B,MAAM,SACNS,UAAU,aACVG,OAAK,EACLF,QAAQ,gBAAe,wBAqB3B,eAACG,EAAA,EAAK,CACJ2D,OAAQA,EACR7F,KAAMA,EACNmC,OAAQjC,EACRkC,SAAS,SACTC,UAAU,EAAM,UAEhB,cAACH,EAAA,EAAMI,OAAM,UACX,cAACJ,EAAA,EAAMK,MAAK,UACV,+DAGJ,eAACL,EAAA,EAAMM,KAAI,WACT,+HAIA,eAACI,EAAA,EAAKG,MAAK,CAACqE,UAAU,qBAAoB,UACxC,cAACxE,EAAA,EAAKI,MAAK,UACT,mBAAGH,GAAG,aAAY,4BAEpB,eAACwE,EAAA,EAAU,WACT,cAACzE,EAAA,EAAKM,QAAO,CACXpB,UAAU,YACVwF,UAAQ,EACRjG,MAAO0E,IAET,cAACsB,EAAA,EAAWE,OAAM,UAChB,cAAC1F,EAAA,EAAM,CAACE,QAAQ,oBAAoBC,QA1I1B,WACtBwF,UAAUC,UAAUC,UAAU3B,GAC9BD,GAAU,EACZ,EAuI2E,SAC3D,sBACE6B,MAAM,6BACNC,MAAM,KACNC,OAAO,KACPC,KAAK,eACLC,MAAM,kBACNC,QAAQ,YAAW,UAEnB,sBAAMC,EAAE,6JACR,sBAAMA,EAAE,mMAKhB,cAACrB,EAAA,EAAK,CACJ7E,QAAQ,UACR8E,YAAY,OACZC,QA1LY,WACtBZ,GAAa,EACf,EAyLYlG,KAAMiG,EAAc,SAEpB,4BAAIE,YAIV,cAACjE,EAAA,EAAMS,OAAM,UACX,cAACd,EAAA,EAAM,CAACE,QAAQ,UAAUC,QAAS9B,EAAY,0BAOzD,ECtNegI,EAPQC,IAAMC,cAAc,CACvCpB,SAAU,GACVqB,UAAW,GACXC,WAAW,EACXC,WAAY,WAAO,ICwGR3C,MAvGf,WACE,IAAQ2C,EAAeC,qBAAWN,GAA1BK,WAGR,EAAkCxI,oBAAS,GAAM,mBAA1CsG,EAAS,KAAEC,EAAY,KAC9B,EAAgDvG,mBAAS,IAAG,mBAArDwG,EAAgB,KAAEC,EAAmB,KAKtCC,EAAqB,SAAChB,GACtBA,IACFa,GAAa,GACbE,EAAoBf,GAExB,EAiCA,OACE,qCACE,cAACmB,EAAA,EAAK,CACJ5G,KAAMqG,EACNtE,QAAQ,UACR8E,YAAY,OACZC,QAAS,WA/CbR,GAAa,GACbE,EAAoB,GAgDhB,EAAE,SAEF,4BAAID,MAGN,qBACEzE,UAAU,iBACVW,MAAO,CAAEe,UAAW,GAAIC,aAAc,GAAIf,MAAO,cAAe,SAEhE,yCAGF,eAACE,EAAA,EAAI,CAACE,SAAU,SAAC7B,GAAC,OAnDtB,SAAsBA,GACpBA,EAAEC,iBAEF,IAAM6F,EAAa,CACjBC,SAAU/F,EAAEG,OAAO,GAAGC,MACtB4F,SAAUhG,EAAEG,OAAO,GAAGC,OAExBC,EAAUyF,GACPxF,MAAK,SAACC,GACLwD,QAAQC,IAAIzD,GACZ,IAAIwF,EAAWxF,EAAI/B,KAAKiG,KAAK,GAAGsB,SAC5BqB,EAAY7G,EAAI/B,KAAKiG,KAAK,GAAGyB,WAEjCoB,EAAW,CAAEvB,WAAUqB,YAAWC,WADlB,IAEhB7H,SAASC,SAASC,QAAQ,IAC5B,IACCe,OAAM,SAACC,GACNqD,QAAQC,IAAItD,EAAIC,UAGT,oCADCD,EAAIC,SAASnC,KAAKgG,QAEtBgB,EACE,sDAIFA,EAAmB,yCAEzB,GACJ,CAsB2BzF,CAAaC,EAAE,EAAC,UACrC,cAAC2B,EAAA,EAAKG,MAAK,CAACqE,UAAU,oBAAmB,SACvC,cAACxE,EAAA,EAAKM,QAAO,CAACC,KAAK,OAAOC,YAAY,8BAExC,cAACR,EAAA,EAAKG,MAAK,CAACqE,UAAU,oBAAmB,SACvC,cAACxE,EAAA,EAAKM,QAAO,CAACC,KAAK,WAAWC,YAAY,cAE5C,cAACvB,EAAA,EAAM,CACLsB,KAAK,SACLrB,UAAU,aACVG,OAAK,EACLF,QAAQ,gBAAe,wBAsBjC,E,OCgEe0G,MAhKf,WACE,IAAQH,EAAcE,qBAAWN,GAAzBI,UACR,EAAsCvI,oBAAS,GAAM,mBAA9C2I,EAAW,KAAEC,EAAc,KAClC,EAA4C5I,mBAAS,QAAO,mBAArD6I,EAAc,KAAEC,EAAiB,KAElCC,EAAe,WACnBxH,IAAaC,MAAK,SAACC,GACjBwD,QAAQC,IAAIzD,GACZf,SAASC,SAASC,QAAQ,IAC5B,GACF,EAEMoI,EAAmB,SAACC,GACxBL,EAAeK,EACjB,EACAC,YAAW,WACL9H,IACF4H,GAAiB,GACjBG,EAAgB,UAEpB,GAAG,KACH,IAAMA,EAAkB,SAACC,GACvBN,EAAkBM,EACpB,EACA,OAAIb,EAEA,cAAC,EAAec,SAAQ,UACrB,SAACC,GAAK,OACL,mCACE,cAAC,IAAO,CACNL,KAAMN,EACNY,UAAWP,EACXQ,QACqB,SAAnBX,EACE,cAAC,EAAO,IACa,WAAnBA,EACF,cAACY,EAAU,IAEX,cAACC,EAAS,eAAKJ,IAElB,SAED,cAACK,EAAA,EAAM,CAAC5H,UAAU,kCAAiC,SACjD,eAAC6H,EAAA,EAAS,WACR,cAACC,EAAA,EAAIC,KAAI,UACP,cAAC,IAAI,CAAC/H,UAAU,eAAegI,GAAG,IAAG,2BASvC,cAACF,EAAA,EAAG,CAAC9H,UAAU,UAAS,SACtB,eAAC8H,EAAA,EAAIC,KAAI,CAAC/H,UAAU,SAAQ,UAC1B,cAACD,EAAA,EAAM,CACLgB,GAAG,SACHd,QAAQ,gBACRoB,KAAK,SACLnB,QAAS8G,EAAa,oBAIxB,cAACjH,EAAA,EAAM,CACLgB,GAAG,OACHf,UAAU,gBACVC,QAAQ,gBACRoB,KAAK,SACLnB,QAAS,WACP+G,GAAiB,GACjBG,EAAgB,OAClB,EAAE,SAEF,qBACEvB,MAAM,6BACNC,MAAM,KACNC,OAAO,KACPC,KAAK,eACLhG,UAAU,uBACVkG,QAAQ,YAAW,SAEnB,sBACE+B,SAAS,UACT9B,EAAE,0MASjB,IAMT,cAAC,EAAemB,SAAQ,UACrB,SAACC,GAAK,OACL,mCACE,cAAC,IAAO,CACNL,KAAMN,EACNY,UAAWP,EACXQ,QACqB,SAAnBX,EACE,cAAC,EAAO,IACa,WAAnBA,EACF,cAACY,EAAU,IAEX,cAACC,EAAS,eAAKJ,IAElB,SAED,cAACK,EAAA,EAAM,CAAC5H,UAAU,uCAAsC,SACtD,eAAC6H,EAAA,EAAS,WACR,cAACC,EAAA,EAAIC,KAAI,UACP,cAAC,IAAI,CAAC/H,UAAU,eAAegI,GAAG,IAAG,2BASvC,eAACF,EAAA,EAAIC,KAAI,CAAC/H,UAAU,SAAQ,UAC1B,cAACD,EAAA,EAAM,CACLgB,GAAG,SACHM,KAAK,SACLpB,QAAQ,gBACRC,QAAS,WACP+G,GAAiB,GACjBG,EAAgB,SAClB,EAAE,qBAIJ,cAACrH,EAAA,EAAM,CACLgB,GAAG,QACHM,KAAK,SACLpB,QAAQ,gBACRC,QAAS,WACP+G,GAAiB,GACjBG,EAAgB,QAClB,EAAE,8BAQX,GAIX,E,gDCrKMc,I,OAAQ,SAERC,GACJ,eAACC,GAAA,EAAG,WACF,eAACC,GAAA,EAAG,CAACC,GAAI,EAAGtI,UAAU,WAAU,UAC7B,IACD,6BAAKkI,KACL,wDACA,8aASF,cAACG,GAAA,EAAG,CAACC,GAAI,EAAE,SACT,qBACEC,IAAK,2BACL5H,MAAO,CAAEmF,MAAO,IAAKC,OAAQ,KAC7B/F,UAAU,cACVwI,IAAI,cA4BGC,OAtBf,WACE,OAAIC,YAEA,eAACC,GAAA,EAAI,CAAC3I,UAAU,aAAY,UAC1B,cAAC4I,EAAA,EAAUC,OAAM,CAACC,GAAIH,KAAKnI,OAAQuI,SAAS,IAAG,SAC5Cb,KAGH,cAACU,EAAA,EAAUI,SAAQ,CAACD,SAAS,IAAG,SAC9B,cAACJ,GAAA,EAAKjI,KAAI,UAAEyH,UAMhB,cAACQ,GAAA,EAAI,CAAC3I,UAAU,cAAa,SAC3B,cAAC2I,GAAA,EAAKjI,KAAI,UAAEyH,MAIpB,EChDMD,I,OAAQ,cAERC,GACJ,eAACC,GAAA,EAAG,WACF,cAACC,GAAA,EAAG,CAACC,GAAI,EAAE,SACT,qBACEC,IACE,+EAEFvI,UAAU,QACVwI,IAAI,iBAGR,eAACH,GAAA,EAAG,CAACC,GAAI,EAAGtI,UAAU,WAAWe,GAAG,YAAW,UAC5C,IACD,6BAAKmH,KACL,0qBAsCSe,OAtBf,WACE,OAAIP,YAEA,eAACC,GAAA,EAAI,CAAC3I,UAAU,aAAY,UAC1B,cAAC4I,EAAA,EAAUC,OAAM,CAACC,GAAIH,KAAKnI,OAAQuI,SAAS,IAAG,SAC5Cb,KAGH,cAACU,EAAA,EAAUI,SAAQ,CAACD,SAAS,IAAG,SAC9B,cAACJ,GAAA,EAAKjI,KAAI,UAAEyH,UAMhB,cAACQ,GAAA,EAAI,CAAC3I,UAAU,cAAa,SAC3B,cAAC2I,GAAA,EAAKjI,KAAI,UAAEyH,MAIpB,E,OC4Hee,OA7Kf,WACE,IAAQ1C,EAAcE,qBAAWN,GAAzBI,UACR,EAAsCvI,oBAAS,GAAM,mBAA9C2I,EAAW,KAAEC,EAAc,KAClC3D,QAAQC,IAAIqD,GAEZ,IAAMS,EAAmB,SAACC,GACxBL,EAAeK,EACjB,EAEA,OAAIwB,aAAYlC,EAEZ,eAACmC,GAAA,EAAI,CAAC3I,UAAU,aAAY,UAC1B,cAAC4I,EAAA,EAAUC,OAAM,CAACC,GAAIH,KAAKnI,OAAQuI,SAAS,IAAG,yBAG/C,cAACH,EAAA,EAAUI,SAAQ,CAACD,SAAS,IAAG,SAC9B,cAACJ,GAAA,EAAKjI,KAAI,UACR,eAAC0H,GAAA,EAAG,CAACzH,MAAO,CAAEwI,UAAW,UAAW,UAClC,eAACd,GAAA,EAAG,CAACC,GAAI,EAAGtI,UAAU,WAAU,UAC9B,6CACA,gcAUF,cAACqI,GAAA,EAAG,CAACC,GAAI,EAAE,SACT,qBACEC,IACE,kFAEFvI,UAAU,QACVwI,IAAI,wBAQTE,YAEP,cAAC,EAAepB,SAAQ,UACrB,SAACC,GAAK,OACL,cAAC,IAAO,CACNL,KAAMN,EACNY,UAAWP,EACXQ,QAAS,cAACC,EAAU,IAAI,SAExB,eAACiB,GAAA,EAAI,CAAC3I,UAAU,aAAY,UAC1B,cAAC4I,EAAA,EAAUC,OAAM,CAACC,GAAIH,KAAKnI,OAAQuI,SAAS,IAAG,yBAG/C,cAACH,EAAA,EAAUI,SAAQ,CAACD,SAAS,IAAG,SAC9B,cAACJ,GAAA,EAAKjI,KAAI,UACR,eAAC0H,GAAA,EAAG,CAACzH,MAAO,CAAEwI,UAAW,UAAW,UAClC,eAACd,GAAA,EAAG,CAACC,GAAI,EAAGtI,UAAU,WAAU,UAC9B,6CACA,6bAUA,cAACD,EAAA,EAAM,CACLE,QAAQ,OACRC,QAAS,kBAAM2G,GAAe,EAAK,EAAC,0BAKxC,cAACwB,GAAA,EAAG,CAACC,GAAI,EAAE,SACT,qBACEC,IACE,kFAEFvI,UAAU,QACVwI,IAAI,yBAOR,IAIPhC,EAEP,cAACmC,GAAA,EAAI,CAAC3I,UAAU,cAAa,SAC3B,cAAC2I,GAAA,EAAKjI,KAAI,UACR,eAAC0H,GAAA,EAAG,CAACzH,MAAO,CAAEwI,UAAW,UAAW,UAClC,eAACd,GAAA,EAAG,CAACC,GAAI,EAAGtI,UAAU,WAAU,UAC9B,6CACA,gcAUF,cAACqI,GAAA,EAAG,CAACC,GAAI,EAAE,SACT,qBACEC,IACE,kFAEFvI,UAAU,QACVwI,IAAI,qBASd,cAAC,EAAelB,SAAQ,UACrB,SAACC,GAAK,OACL,cAAC,IAAO,CACNL,KAAMN,EACNY,UAAWP,EACXQ,QAAS,cAACC,EAAU,IAAI,SAExB,cAACiB,GAAA,EAAI,CAAC3I,UAAU,cAAa,SAC3B,cAAC2I,GAAA,EAAKjI,KAAI,UACR,eAAC0H,GAAA,EAAG,CAACzH,MAAO,CAAEwI,UAAW,UAAW,UAClC,eAACd,GAAA,EAAG,CAACC,GAAI,EAAGtI,UAAU,WAAU,UAC9B,6CACA,6bAUA,cAACD,EAAA,EAAM,CAACE,QAAQ,OAAOC,QAAS,kBAAM2G,GAAe,EAAK,EAAC,0BAI7D,cAACwB,GAAA,EAAG,CAACC,GAAI,EAAE,SACT,qBACEC,IACE,kFAEFvI,UAAU,QACVwI,IAAI,sBAMN,GAKpB,EC7JeY,OAhBf,WAGE,OAEE,mCACE,eAACR,EAAA,EAAS,CAACS,iBAAiB,IAAG,UAC7B,cAAC,GAAK,IACN,cAAC,GAAS,IACV,cAAC,GAAU,QAKnB,ECTeC,OARf,WACE,OACE,mCACE,cAAC,GAAO,KAGd,E,iBCgEeC,OA1Df,WACE,MAAgC7C,qBAAWN,GAAnCG,EAAS,EAATA,UAAWrB,EAAQ,EAARA,SACnB,EAAwBjH,qBAAU,mBAA3BuL,EAAI,KAAEC,EAAO,KAGpB5E,qBAAU,WACR6E,GACF,IAEA,IAAMA,EAAiB,WACrBlK,EAAsB+G,GAAW9G,MAAK,SAACC,GACrC+J,EAAQ/J,EAAI/B,KAEd,GACF,EAWA,OACE,eAACkK,EAAA,EAAS,WACR,eAACc,GAAA,EAAI,CAACR,MAAI,EAACnI,UAAU,aAAaW,MAAO,CAAEwI,UAAW,UAAW,UAC/D,2CAAcjE,EAAQ,OACtB,qBAAIvE,MAAO,CAAEgJ,MAAO,QAAS,mBAAQH,QAEvC,eAACb,GAAA,EAAI,CAACR,MAAI,EAACnI,UAAU,aAAaW,MAAO,CAAEwI,UAAW,UAAW,UAC/D,cAACrI,EAAA,EAAKI,MAAK,UACT,+CAEF,eAACqE,EAAA,EAAU,CAACvF,UAAU,OAAM,UAC1B,cAAC4J,GAAA,EAAW,CAACpE,UAAQ,EAACjG,MAAOgH,IAC7B,cAAChB,EAAA,EAAWE,OAAM,UAChB,cAAC1F,EAAA,EAAM,CAACG,QAhBM,WACtBwF,UAAUC,UAAUC,UAAUW,EAChC,EAc4CtG,QAAQ,oBAAmB,SAC3D,sBACE4F,MAAM,6BACNC,MAAM,KACNC,OAAO,KACPC,KAAK,eACLC,MAAM,kBACNC,QAAQ,YAAW,UAEnB,sBAAMC,EAAE,6JACR,sBAAMA,EAAE,wMAQxB,E,iDCuMe0D,OA1Pf,WACE,MAAgCnD,qBAAWN,GAAnCG,EAAS,EAATA,UAAWrB,EAAQ,EAARA,SACnB,EAAwCjH,mBAAS,IAAG,mBAA7C6L,EAAY,KAAEC,EAAe,KAC9BC,EAAqB,CAAEC,gBAAiB,UAAWrJ,MAAO,SAgBhEiE,qBAAU,WACRrF,EAAwB+G,GACrB9G,MAAK,SAACC,GACL,IAAIwK,EAAQ,EA4BZ,OA3BAxK,EAAI/B,KAAKwM,SAAQ,SAACxM,GAXF,IAACyM,EAYfzM,EAAK0M,IAAMH,EACXvM,EAAK2M,WAbUF,EAagBzM,EAAK2M,UAXvB,IAAIC,KADNH,GAEaI,kBAWpB7M,EAAK8M,cAAgBlE,IACvB5I,EAAK8M,YAAcvF,EACnBvH,EAAK+M,OAAS,MAAQ/M,EAAK+M,OAC3BlL,EAAgB7B,EAAKgN,WAAWlL,MAAK,SAACiE,GAE/BA,EAAO/F,KAAKgG,UAASD,EAAO/F,KAAKgG,QAAU,kBAChDhG,EAAKgN,UAAYjH,EAAO/F,KAAKgG,OAC/B,KAEEhG,EAAKgN,YAAcpE,IACrB5I,EAAKgN,UAAYzF,EACjBvH,EAAK+M,OAAS,MAAQ/M,EAAK+M,OACvB/M,EAAK8M,YACPjL,EAAgB7B,EAAK8M,aAAahL,MAAK,SAACiE,GACjCA,EAAO/F,KAAKgG,UACfD,EAAO/F,KAAKgG,QAAU,kBACxBhG,EAAK8M,YAAc/G,EAAO/F,KAAKgG,OACjC,IAEAhG,EAAK8M,YAAc,UAGvBP,GACF,IACOxK,EAAI/B,IACb,IACC8B,MAAK,SAACmL,GAGLzD,YAAW,WACT4C,EAAgBa,EAClB,GAAG,IACL,GACJ,GAAG,CAACrE,EAAWrB,IAEf,IAAM2F,EAAU,CACd,CACEC,UAAW,cACXC,KAAM,OACNC,MAAM,EACNhB,qBACAiB,UAAW,SAACC,EAAOC,GACjB,OAAKD,EAOc,QAAVA,EAEL,4CACc,mBAAGlL,UAAU,mBACzB,mBAAGA,UAAU,+BAGA,SAAVkL,EAEL,4CACc,mBAAGlL,UAAU,0BACzB,mBAAGA,UAAU,wBAGZ,KAnBH,4CACc,mBAAGA,UAAU,mBACzB,mBAAGA,UAAU,uBAkBrB,GAEF,CACE8K,UAAW,YACXC,KAAM,YACNC,MAAM,EACNhB,qBACAiB,UAAW,SAACC,EAAOC,GACjB,OAAKD,EAOc,QAAVA,EAEL,4CACc,mBAAGlL,UAAU,mBACzB,mBAAGA,UAAU,+BAGA,SAAVkL,EAEL,4CACc,mBAAGlL,UAAU,0BACzB,mBAAGA,UAAU,wBAGZ,KAnBH,4CACc,mBAAGA,UAAU,mBACzB,mBAAGA,UAAU,uBAkBrB,GAEF,CACE8K,UAAW,SACXC,KAAM,SACNC,MAAM,EACNhB,qBACAiB,UAAW,SAACC,EAAOC,GACjB,OAAKD,EAOc,QAAVA,EAEL,4CACc,mBAAGlL,UAAU,mBACzB,mBAAGA,UAAU,+BAGA,SAAVkL,EAEL,4CACc,mBAAGlL,UAAU,0BACzB,mBAAGA,UAAU,wBAGZ,KAnBH,4CACc,mBAAGA,UAAU,mBACzB,mBAAGA,UAAU,uBAkBrB,GAEF,CACE8K,UAAW,YACXC,KAAM,YACNC,MAAM,EACNhB,qBACAiB,UAAW,SAACC,EAAOC,GACjB,OAAKD,EAOc,QAAVA,EAEL,4CACc,mBAAGlL,UAAU,mBACzB,mBAAGA,UAAU,+BAGA,SAAVkL,EAEL,4CACc,mBAAGlL,UAAU,0BACzB,mBAAGA,UAAU,wBAGZ,KAnBH,4CACc,mBAAGA,UAAU,mBACzB,mBAAGA,UAAU,uBAkBrB,IAIEoL,EAAY,CAChBC,SAAU,SAACC,GAAG,OACZ,8BACE,4BAAIA,EAAIC,SACJ,EAERC,kBAAkB,EAClBC,2BAA4B,YAC1B,OADyC,EAAZC,aAEpB,kCAEF,iCACT,EACAC,qBAAsB,YACpB,OAD+B,EAARC,SAEd,kCAEF,mCACT,GAEF,OAA4B,IAAxB9B,EAAa+B,OAEb,cAAChE,EAAA,EAAS,CAAC7H,UAAU,aAAY,SAC/B,eAAC2I,GAAA,EAAI,CACHR,MAAI,EACJxH,MAAO,CACLwI,UAAW,SACXc,gBAAiB,UACjBrJ,MAAO,UACPmF,OAAQ,KACR,UAEF,+DACA,oGAIA,cAAChG,EAAA,EAAM,CAAC6B,KAAK,UAAUjB,MAAO,CAAEe,UAAW,GAAIoK,WAAY,IAAK,4BAQpE,mCACE,cAACjE,EAAA,EAAS,CAAC7H,UAAU,YAAW,SAC9B,cAAC,KAAc,CACbA,UAAU,QACVW,MAAO,CAAEwI,UAAW,UACpB4C,SAAS,MACTpO,KAAMmM,EACNe,QAASA,EACTO,UAAWA,EACXY,WAAYC,OACZC,cA3OY,CACpB,CACEpB,UAAW,YACXI,MAAO,SAyODiB,SAAO,EACPC,OAAK,EACLC,WAAS,OAMrB,EC9PeC,OATf,WACE,OACE,qCACE,cAAC,GAAW,IACZ,cAAC,GAAS,MAGhB,E,iBCiNeC,OA/Mf,WACE,IAAMC,EAAaC,mBACbC,EAAOD,iBAAO,GACZlG,EAAcG,qBAAWN,GAAzBG,UACR,EAA8BtI,mBAAS,GAAE,mBAAlC0O,EAAO,KAAEC,EAAU,KAC1B,EAAoC3O,mBAAS,GAAE,mBAAxC4O,EAAU,KAAEC,EAAa,KAChC,EAA4B7O,oBAAS,GAAM,mBAApC8O,EAAM,KAAEC,EAAS,KACxB,EAA4B/O,mBAAS,GAAE,mBAAhCgP,EAAM,KAAEC,EAAS,KACxB,EAAkCjP,mBAAS,GAAE,mBAAtCkP,EAAS,KAAEC,EAAY,KAC9B,EAAwBnP,mBAAS,GAAE,mBAA5BoP,EAAI,KAAEC,EAAO,KACpB,EAA0BrP,mBAAS,GAAE,mBAA9BsP,EAAK,KAAEC,EAAQ,KACtB,EAAkCvP,oBAAS,GAAM,mBAA1CsG,EAAS,KAAEC,EAAY,KAC9B,EAAgDvG,mBAAS,IAAG,mBAArDwG,EAAgB,KAAEC,EAAmB,KAC5C,EAAgDzG,mBAAS,UAAS,mBAA3DwP,EAAgB,KAAEC,EAAmB,KAE5C7I,qBAAU,WACRrF,IAAaC,MAAK,SAACC,GACjBkN,EAAWlN,EAAI/B,MACf,IAAMgQ,EAAM,EAAIjO,EAAI/B,KACpBuP,EAAUS,EACZ,GACF,IAEA,IAAMhJ,EAAqB,SAAChB,EAAS1D,GAC/B0D,IACFa,GAAa,GACbE,EAAoBf,GACpB+J,EAAoBzN,GAExB,EAOM2N,GAAW,SAAClD,GAGhB,IAAMmD,GAFNnD,EAASoD,SAASpD,IAEG,IAErB0C,EAAa,GACbE,EAAQO,GAERL,EADc9C,EAASiC,EAAUkB,EAEnC,EAGME,GAAS,SAACC,GACd,IAAMzO,EAAQyO,EAAMf,EACpBH,EAAcvN,GACd,IAAMsO,EAAMtO,EAAQ,IACpB+N,EAAQO,GAERL,EADcjO,EAAQsO,EAExB,EAEMI,GAAiB,SAACC,GAAsB,IAAbC,EAAG,uDAAG,EACjCD,GACFlB,GAAU,GACVY,GAASO,KAETnB,GAAU,GACVe,GAAOI,GAEX,EA6BA,OACE,cAACtG,EAAA,EAAS,UACR,eAACc,GAAA,EAAI,CAAC3I,UAAU,YAAYW,MAAO,CAAEyN,QAAS,IAAK,UACjD,cAACtJ,EAAA,EAAK,CACJ5G,KAAMqG,EACNtE,QAASwN,EACTzI,QAAS,WApEfR,GAAa,GACbE,EAAoB,GAqEd,EAAE,SAEF,4BAAID,MAEN,eAAC3D,EAAA,EAAI,CAACuN,IAAK7B,EAAYzL,GAAG,WAAU,UAClC,cAACD,EAAA,EAAKG,MAAK,CAAC6H,GAAIV,KAAK9C,UAAU,KAAI,SACjC,cAAC+C,GAAA,EAAG,CAAC1H,MAAO,CAAEe,UAAW,GAAK4G,GAAI,CAAEgG,KAAM,EAAGC,OAAQ,GAAI,SACvD,cAACzN,EAAA,EAAKM,QAAO,CACXpB,UAAU,WACVqB,KAAK,OACLC,YAAY,+BAIlB,cAACR,EAAA,EAAKG,MAAK,CAAC6H,GAAIV,KAAK9C,UAAU,UAAS,SACtC,cAAC+C,GAAA,EAAG,CAAC1H,MAAO,CAAEe,UAAW,GAAK4G,GAAI,CAAEgG,KAAM,EAAGC,OAAQ,GAAI,SACvD,cAACzN,EAAA,EAAKM,QAAO,CACXpB,UAAU,WACVqB,KAAK,OACLC,YAAY,oBAIlB,cAACR,EAAA,EAAKG,MAAK,CAAC6H,GAAIV,KAAK9C,UAAU,QAAO,SACpC,cAAC+C,GAAA,EAAG,CAAC1H,MAAO,CAAEe,UAAW,GAAK4G,GAAI,CAAEgG,KAAM,EAAGC,OAAQ,GAAI,SACvD,cAACzN,EAAA,EAAKM,QAAO,CACXpB,UAAU,WACVqB,KAAK,OACLC,YAAY,oBAKlB,eAACR,EAAA,EAAKG,MAAK,CAAC6H,GAAIV,KAAK9C,UAAU,OAAM,UACnC,cAACxE,EAAA,EAAKI,MAAK,CAACP,MAAO,CAAEe,UAAW,GAAKyJ,QAAM,EAAC7C,GAAI,EAAE,yBAGlD,cAACD,GAAA,EAAG,CAAC1H,MAAO,CAAEe,UAAW,GAAK4G,GAAI,CAAEgG,KAAM,EAAGC,OAAQ,GAAI,SACtDxB,EACC,cAACjM,EAAA,EAAKM,QAAO,CACXpB,UAAU,WACVqB,KAAK,OACLmN,QAAS,SAACrP,GAAC,OAAK8O,IAAe,EAAO9O,EAAEG,OAAOC,MAAM,EACrDA,MAAO4N,IAGT,cAACrM,EAAA,EAAKM,QAAO,CACXpB,UAAU,WACVqB,KAAK,OACLoN,SAAU,SAACtP,GAAC,OAAK4O,GAAO5O,EAAEG,OAAOC,MAAM,SAK/C,eAACuB,EAAA,EAAKG,MAAK,CAAC6H,GAAIV,KAAK9C,UAAU,SAAQ,UACrC,cAACxE,EAAA,EAAKI,MAAK,CAACP,MAAO,CAAEe,UAAW,GAAKyJ,QAAM,EAAC7C,GAAI,EAAE,iCAGlD,cAACD,GAAA,EAAG,CAAC1H,MAAO,CAAEe,UAAW,GAAK4G,GAAI,CAAEgG,KAAM,EAAGC,OAAQ,GAAI,SACtDxB,EACC,cAACjM,EAAA,EAAKM,QAAO,CACXpB,UAAU,WACVqO,IAAK3B,EACLrL,KAAK,OACLoN,SAAU,SAACtP,GAAC,OAAKyO,GAASzO,EAAEG,OAAOC,MAAM,IAG3C,cAACuB,EAAA,EAAKM,QAAO,CACXpB,UAAU,WACVqO,IAAK3B,EACLrL,KAAK,OACLmN,QAAS,SAACrP,GAAC,OAAK8O,IAAe,EAAM9O,EAAEG,OAAOC,MAAM,EACpDA,MAAOsN,SAKf,eAAC/L,EAAA,EAAKG,MAAK,CAAC6H,GAAIV,KAAK9C,UAAU,yBAAwB,UACrD,cAACxE,EAAA,EAAKI,MAAK,CAACP,MAAO,CAAEe,UAAW,GAAKyJ,QAAM,EAAC7C,GAAI,EAAE,4BAGlD,cAACD,GAAA,EAAG,CAAC1H,MAAO,CAAEe,UAAW,GAAK4G,GAAI,CAAEgG,KAAM,EAAGC,OAAQ,GAAI,SACvD,cAACzN,EAAA,EAAKM,QAAO,CAACoE,UAAQ,EAACjG,MAAO8N,SAGlC,eAACvM,EAAA,EAAKG,MAAK,CAAC6H,GAAIV,KAAK9C,UAAU,qBAAoB,UACjD,cAACxE,EAAA,EAAKI,MAAK,CAACP,MAAO,CAAEe,UAAW,GAAKyJ,QAAM,EAAC7C,GAAI,EAAE,gCAGlD,cAACD,GAAA,EAAG,CAAC1H,MAAO,CAAEe,UAAW,GAAK4G,GAAI,CAAEgG,KAAM,EAAGC,OAAQ,GAAI,SACvD,cAACzN,EAAA,EAAKM,QAAO,CAACoE,UAAQ,EAACjG,MAAOgO,SAGlC,cAACzM,EAAA,EAAKG,MAAK,CAAC6H,GAAIV,KAAI,SAClB,cAACC,GAAA,EAAG,CAAC1H,MAAO,CAAEe,UAAW,GAAK4G,GAAI,CAAEgG,KAAM,GAAIC,OAAQ,UAG1D,cAACxO,EAAA,EAAM,CAACsB,KAAK,SAASnB,QApIT,SAACf,GAClBA,EAAEC,iBACF,IAAMzB,EAAO,aAAI6O,EAAWkC,SAASC,QAAO,SAACC,EAAKC,GAEhD,OADAD,EAAIC,EAAMC,aAAa,OAASD,EAAMtP,MAC/BqP,CACT,GAAG,CAAC,GACJjR,EAAKoR,KAAOxI,EACZrD,QAAQC,IAAIxF,GACZuF,QAAQC,IAAI6L,OAAOC,OAAOtR,GAAMgR,QAAO,SAACO,EAAGC,GAAC,OAAKD,KAAOC,CAAC,IAAE,IAExDH,OAAOC,OAAOtR,GAAMgR,QAAO,SAACjL,EAAQnE,GAAK,OAAKmE,KAAYnE,CAAK,IAAE,IAKpE2D,QAAQC,IAAIqJ,EAAWkC,SACvBxL,QAAQC,IAAIqJ,EAAWkC,QAAQ,GAAGnP,OAClCC,EAAoB7B,GACjB8B,MAAK,SAACC,GACLf,SAASyQ,eAAe,YAAYC,QACpC1K,EAAmB,0BAA2B,UAChD,IACC/E,OAAM,SAACC,GACN8E,EAAmB9E,EAAIC,SAASnC,KAAKgG,QAAS,SAChD,KAZAgB,EAAmB,2BAA4B,SAanD,EA2GgD,0BAMlD,E,OCjLe2K,OAlCf,WACE,IAAQ/I,EAAcG,qBAAWN,GAAzBG,UACR,EAAwBtI,qBAAU,mBAA3BuL,EAAI,KAAEC,EAAO,KAGpB5E,qBAAU,WACR6E,GACF,IAEA,IAAMA,EAAiB,WACrBlK,EAAsB+G,GAAW9G,MAAK,SAACC,GACrC+J,EAAQ/J,EAAI/B,KAEd,GACF,EASA,OACE,cAACkK,EAAA,EAAS,UACR,eAACc,GAAA,EAAI,CAAC3I,UAAU,aAAamI,MAAI,EAACxH,MAAO,CAAEwI,UAAW,UAAW,UAC/D,4CACA,qBAAIxI,MAAO,CAAEgJ,MAAO,QAAS,mBAAQH,EAAI,WAKjD,EC3Be+F,OATf,WACE,OACE,qCACI,cAAC,GAAe,IAChB,cAAC,GAAQ,MAGjB,E,OCkHeC,OAxHf,WACE,MAA0BvR,mBAAS,GAAE,mBAA9BwR,EAAK,KAAEC,EAAQ,KACtB,EAAgCzR,oBAAS,GAAM,mBAAxC0R,EAAQ,KAAEC,EAAW,KACtBC,EAAWpD,iBAAO,MACxB,EAAwBxO,oBAAS,GAAM,mBAAhCC,EAAI,KAAEC,EAAO,KACpB,EAAgCF,oBAAS,GAAM,mBAAxC6R,EAAQ,KAAEC,EAAW,KAEtB3R,EAAc,WAAH,OAASD,GAAQ,EAAO,EACnC6R,EAAkB,WAAH,OAASD,GAAY,EAAO,EA8BjD,OACE,qCAGE,cAACpH,GAAA,EAAI,CAAC3I,UAAU,cAAa,SAC3B,eAAC2I,GAAA,EAAKjI,KAAI,CAACV,UAAU,yBAAwB,UAC3C,cAAC2I,GAAA,EAAKpH,KAAI,8XAQRoO,EASA,cAAC9H,EAAA,EAAS,CAAC7H,UAAU,YAAW,SAC9B,mBAAGA,UAAU,QAAO,SAhCb,WACjB,IAAMiQ,EAAa,WAAIR,EAAQ,IAAKS,OAAO,GACrCC,EAAO,UAAMC,KAAKC,MAAMZ,EAAQ,KAChCa,EAAa,WAAIH,EAAU,IAAKD,OAAO,GAE7C,MAAM,GAAN,OAAUI,EAAU,cAAML,EAC5B,CA0BkCM,OATxB,cAACxQ,EAAA,EAAM,CACLE,QAAQ,OACRU,MAAO,CAAEmF,MAAO,OAChB5F,QAAS,kBA7CnB0P,GAAY,GACZC,EAASnB,QAAU8B,aAAY,WAC7Bd,GAAS,SAACD,GAAK,OAAKA,EAAQ,CAAC,GAC/B,GAAG,UACHjQ,IACGC,MAAK,SAACC,GACL+Q,cAAcZ,EAASnB,SACvBkB,GAAY,GACZzR,GAAQ,GACRuR,EAAS,GACTxM,QAAQC,IAAIzD,EAAI/B,KAClB,IACCiC,OAAM,WACL6Q,cAAcZ,EAASnB,SACvBkB,GAAY,GACZG,GAAY,GACZL,EAAS,EACX,GA4BoC,EAAC,+BAYrC,eAACtP,EAAA,EAAK,CACJlC,KAAMA,EACNmC,OAAQjC,EACRkC,SAAS,SACTC,UAAU,EAAM,UAEhB,cAACH,EAAA,EAAMI,OAAM,UACX,cAACJ,EAAA,EAAMK,MAAK,UACV,qDAGJ,eAACL,EAAA,EAAMM,KAAI,WACT,oBAAIV,UAAU,WAAU,0BACxB,iCACE,2CAEF,oDACqB,qDAAgC,oCAGrD,sDAEF,cAACI,EAAA,EAAMS,OAAM,UACX,cAACd,EAAA,EAAM,CAACG,QAAS9B,EAAY,wBAKjC,eAACgC,EAAA,EAAK,CACJlC,KAAM4R,EACNzP,OAAQ2P,EACR1P,SAAS,SACTC,UAAU,EAAM,UAEhB,cAACH,EAAA,EAAMI,OAAM,UACX,cAACJ,EAAA,EAAMK,MAAK,UACV,0DAGJ,eAACL,EAAA,EAAMM,KAAI,WACT,oBAAIV,UAAU,WAAU,0BACxB,oEACA,yEAEF,cAACI,EAAA,EAAMS,OAAM,UACX,cAACd,EAAA,EAAM,CAACG,QAAS8P,EAAgB,0BAK3C,EC/GeU,OARf,WACI,OACI,mCACA,cAAC,GAAU,KAGnB,E,OCyCe7P,OA/Cf,WACE,OACE,8BACE,cAAC8H,GAAA,EAAI,CAAC5H,GAAG,SAASf,UAAU,cAAc2Q,GAAG,OAAO5F,KAAK,QAAO,SAC9D,cAACpC,GAAA,EAAKjI,KAAI,UACR,eAACiI,GAAA,EAAKpH,KAAI,sCAER,oBACEK,KAAK,iCACLtC,OAAO,SACPsR,IAAI,aAAY,UAEf,IAAG,kBACY,OACb,IAAG,IAER,oBACEhP,KAAK,iCACLtC,OAAO,SACPsR,IAAI,aAAY,+BAEG,OAChB,IAAG,IAER,mBACEhP,KAAK,+BACLtC,OAAO,SACPsR,IAAI,aAAY,6BAGb,IAAG,IAER,oBACEhP,KAAK,kCACLtC,OAAO,SACPsR,IAAI,aAAY,UAEf,IAAG,iCAQlB,ECeeC,I,OAlDN,kDACP,WAAYC,GAAQ,IAAD,EAcf,OAde,qBACjB,cAAMA,IAEDrK,WAAa,YAAyC,IAAtCvB,EAAQ,EAARA,SAAUqB,EAAS,EAATA,UAAWC,EAAS,EAATA,UAExC,EAAKuK,UAAS,SAACxJ,GAAK,MAAM,CACxBrC,SAAUA,EACVqB,UAAWA,EACXC,UAAWA,EACZ,GACH,EAEA,EAAKe,MAAQ,CACXd,WAAY,EAAKA,YACjB,CACJ,CA+BC,OA/BA,8CAED,WAAqB,IAAD,OACbuK,KAAKzJ,MAAMf,WACdhH,IAAkBC,MAAK,SAACC,GACtBwD,QAAQC,IAAIzD,GACRA,EAAI/B,KAAK6I,WACX,EAAKC,WAAW/G,EAAI/B,KAExB,GAEJ,GAAC,oBAED,WACE,OACE,cAAC,EAAesT,SAAQ,CAAC1R,MAAOyR,KAAKzJ,MAAM,SACzC,eAAC,IAAM,WACL,cAAC,EAAU,IACX,cAACM,EAAA,EAAS,UACR,eAAC,IAAM,WACL,cAAC,IAAK,CAACqJ,OAAK,EAACC,KAAK,IAAIC,UAAW9H,KACjC,cAAC,IAAK,CAAC4H,OAAK,EAACC,KAAK,WAAWC,UAAW9E,KAExC,cAAC,IAAK,CAAC4E,OAAK,EAACC,KAAK,QAAQC,UAAW7B,KACrC,cAAC,IAAK,CAAC2B,OAAK,EAACC,KAAK,UAAUC,UAAWC,UAG3C,cAAC,GAAM,QAIf,KAAC,EA/CM,CAASC,c,OCTlBC,IAASC,OACP,cAAC,IAAMC,WAAU,UACf,cAAC,GAAG,MAEN9S,SAASyQ,eAAe,Q","file":"static/js/main.d4806807.chunk.js","sourcesContent":["/* eslint-disable import/no-anonymous-default-export */\nimport axios from \"axios\";\n\nexport default {\n  googleOauth: function (data) {\n    return axios.post(`/api/googleOauth`, data);\n  },\n  signUp: function (data) {\n    return axios.post(`/api/signUp`, data);\n  },\n  logOut: function () {\n    return axios.post(`/api/logout`);\n  },\n  logIn: function (data) {\n    return axios.post(`/api/logIn`, data);\n  },\n  getAddressBalance: function (data) {\n    return axios.get(\"/api/blockchain/balance/\" + data);\n  },\n  getUserTransactions: function (data) {\n    return axios.get(\"/api/blockchain/transactions/\" + data);\n  },\n  getUsername: function (data) {\n    return axios.get(\"/api/username/\" + data);\n  },\n  sendTransaction: function (data) {\n    return axios.post(\"/api/blockchain/transactions\", data);\n  },\n  getSessions: function (data) {\n    return axios.get(\"/api/sessions\");\n  },\n  checkPrivateKeyMatch: function (data) {\n    return axios.delete(`/api/delete/` + data);\n  },\n  getUSD: function (data) {\n    return axios.get(\"/api/blockchain/coinValue\");\n  },\n  startMining: function () {\n    return axios.get(\"/api/blockchain/mine\");\n  },\n  getValueData: function (data) {\n    return axios.get(\"/api/blockchain/valueData\");\n  },\n  addTransaction: function (data) {\n    return axios.post(\"/api/blockchain/addTransaction\", data);\n  },\n};\n\n// return axios.post(`http://localhost:3001/api/signUp`, data, {\n//     mode: 'cors',\n//     credentials: 'include'\n//   });\n\n// return axios({\n//     method: 'post', //you can set what request you want to be\n//     url: 'http://localhost:3001/api/signUp',\n//     data: data,\n//     crossDomain: true,\n//     headers: {\n//         'Access-Control-Allow-Origin': '*',\n//         'Accept': 'application/json',\n//         'Content-Type': 'application/json'\n//     }\n// })\n","import React, { useState } from \"react\";\r\nimport { Modal, Button, Form } from \"react-bootstrap\";\r\nimport API from \"../../utils/api\";\r\nimport \"./style.css\";\r\n\r\nfunction DeleteAccount() {\r\n  // displays Delete Account modal\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  // displays Confirm Delete Account modal\r\n  const [showConfirm, setShowConfirm] = useState(false);\r\n  const handleCloseConfirm = () => setShowConfirm(false);\r\n  const handleShowConfirm = () => setShowConfirm(true);\r\n\r\n  // displays Delete Successful modal\r\n  const [showSuccess, setShowSuccess] = useState(false);\r\n  const handleCloseSuccess = () => {\r\n    setShowSuccess(false);\r\n    document.location.replace(\"/\");\r\n  };\r\n  const handleShowSuccess = () => setShowSuccess(true);\r\n\r\n  // display Delete Unsuccessful modal\r\n  const [showFailure, setShowFailure] = useState(false);\r\n  const handleCloseFailure = () => setShowFailure(false);\r\n  const handleShowFailure = () => setShowFailure(true);\r\n\r\n  // Handle private key and compare\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const privateKey = e.target[0].value;\r\n\r\n    if (!privateKey) {\r\n      handleShowFailure();\r\n    }\r\n\r\n    API.checkPrivateKeyMatch(privateKey)\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          // User Account successfully deleted\r\n          // console.log(res.data) // debugging\r\n          handleShowSuccess();\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        if (err.response.status === 400) {\r\n          // console.log(err.response) // debugging\r\n          handleShowFailure();\r\n        }\r\n      });\r\n    // Close Confirm modal\r\n    handleCloseConfirm();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* Delete Account Button on Sidebar */}\r\n      <Button\r\n        className=\"deletebtn\"\r\n        variant=\"outline-danger\"\r\n        onClick={handleShow}\r\n        block\r\n      >\r\n        Delete Account\r\n      </Button>\r\n\r\n      {/* Delete Account modal */}\r\n      <Modal\r\n        show={show}\r\n        onHide={handleClose}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n      >\r\n        <Modal.Header>\r\n          <Modal.Title>\r\n            <h3>Delete Account</h3>\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <h5 style={{ color: \"red\" }}>\r\n            Are you sure you want to delete your account?\r\n          </h5>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          {/* Confirmation modal */}\r\n          <Button onClick={handleClose}>Cancel</Button>\r\n          <Button\r\n            onClick={() => {\r\n              // handle closing Delete Account modal and opening Confirm modal\r\n              handleClose();\r\n              handleShowConfirm();\r\n            }}\r\n          >\r\n            Confirm\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n\r\n      {/* Confirm Delete Account modal */}\r\n      <Modal\r\n        show={showConfirm}\r\n        onHide={handleCloseConfirm}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n      >\r\n        <Modal.Header>\r\n          <Modal.Title>\r\n            <h3>Confirm Delete Account</h3>\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Form id=\"privateKey\" onSubmit={(e) => handleSubmit(e)}>\r\n          <Modal.Body>\r\n            <Form.Group>\r\n              <Form.Label style={{ fontSize: 14 }}>\r\n                To delete your account, please enter your private key:\r\n              </Form.Label>\r\n              <Form.Control type=\"text\" placeholder=\"Private Key\" />\r\n              <Form.Text style={{ color: \"red\", fontWeight: \"bold\" }}>\r\n                Please note: This cannot be undone!\r\n              </Form.Text>\r\n            </Form.Group>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button onClick={handleCloseConfirm}>Cancel</Button>\r\n            <Button id=\"confirmBtn\" type=\"submit\">\r\n              Confirm\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Form>\r\n      </Modal>\r\n\r\n      {/* Successful Account Delete */}\r\n      <Modal\r\n        show={showSuccess}\r\n        onHide={handleCloseSuccess}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n      >\r\n        <Modal.Header>\r\n          <Modal.Title>\r\n            <h3>Your Account has been deleted.</h3>\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <h5>Thank you for using SpartanCoin!</h5>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button onClick={handleCloseSuccess}>Close</Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n\r\n      {/* Failure Account Delete */}\r\n      <Modal\r\n        show={showFailure}\r\n        onHide={handleCloseFailure}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n      >\r\n        <Modal.Header>\r\n          <Modal.Title>\r\n            <h3>Your private key does not match our records.</h3>\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <p>Please check your private key and try, again.</p>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button onClick={handleCloseFailure}>Close</Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default DeleteAccount;\r\n","import React from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport DeleteAccount from \"../DeleteAccount\";\r\nimport \"./style.css\";\r\n\r\nfunction Sidebar() {\r\n  return (\r\n    <div>\r\n      <h3\r\n        className=\"sidebar-header\"\r\n        style={{ marginTop: 20, marginBottom: 30, color: \"whitesmoke\" }}\r\n      >\r\n        SpartanCoin\r\n      </h3>\r\n\r\n      <Button\r\n        className=\"sidebutton\"\r\n        href=\"/profile\"\r\n        block\r\n        variant=\"outline-light\"\r\n      >\r\n        Profile\r\n      </Button>\r\n      {/* <Button\r\n        className=\"sidebutton\"\r\n        href=\"/buy\"\r\n        block\r\n        variant=\"outline-light\"\r\n      >Buy Coin\r\n        </Button> */}\r\n      <Button className=\"sidebutton\" href=\"/send\" block variant=\"outline-light\">\r\n        Send\r\n      </Button>\r\n      <Button\r\n        className=\"sidebutton\"\r\n        href=\"/mining\"\r\n        block\r\n        variant=\"outline-light\"\r\n      >\r\n        Mine Coin\r\n      </Button>\r\n      <DeleteAccount block />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Sidebar;\r\n","import * as queryString from 'query-string';\nimport axios from 'axios';\nimport API from \"./api\";\n\nconst stringifiedParams = queryString.stringify({\n  client_id: '232246939902-feprc0hdm5dl57fbkpomoq7cec1lkpce.apps.googleusercontent.com',\n  redirect_uri: 'https://spartancoin.azurewebsites.net/profile',\n  scope: [\n    'https://www.googleapis.com/auth/userinfo.email',\n    'https://www.googleapis.com/auth/userinfo.profile',\n  ].join(' '), // space seperated string\n  response_type: 'code',\n  access_type: 'offline',\n  prompt: 'consent',\n});\n\nexport const googleLoginUrl = `https://accounts.google.com/o/oauth2/v2/auth?${stringifiedParams}`;\n\nconst urlParams = queryString.parse(window.location.search);\n\nif (urlParams.error) {\n  console.log(`An error occurred: ${urlParams.error}`);\n} else if(urlParams.code) {\n   getAccessTokenFromCode(urlParams.code)\n  .then((res)=>{\n    getGoogleUserInfo(res)\n    .then((userInfo)=>{\n        const data = {\n            id: userInfo.id,\n            email: userInfo.email,\n            name: userInfo.name.split(\" \").join(\"\")\n        }\n        API.googleOauth(data)\n        .then((result)=>{\n          if(result.data.message){\n            console.log(result.data.message);\n             privateKey = result.data.message;\n\n          };\n          if(result.data.user){\n            window.location.reload();\n          }\n        });\n    })\n  });\n\n}\n\nasync function getAccessTokenFromCode(code) {\n    const { data } = await axios({\n      url: `https://oauth2.googleapis.com/token`,\n      method: 'post',\n      data: {\n        client_id: '232246939902-feprc0hdm5dl57fbkpomoq7cec1lkpce.apps.googleusercontent.com',\n        client_secret: '0-HuUnGtmzhrsr0IebcTqVgf',\n        redirect_uri: 'http://localhost:3000/profile',\n        grant_type: 'authorization_code',\n        code,\n      },\n    });\n    return data.access_token;\n  };\n\n  async function getGoogleUserInfo(access_token) {\n    const { data } = await axios({\n      url: 'https://www.googleapis.com/oauth2/v2/userinfo',\n      method: 'get',\n      headers: {\n        Authorization: `Bearer ${access_token}`,\n      },\n    });\n    return data;\n  };\n\n  export var privateKey = \"\";","import React, { useEffect, useState } from \"react\";\nimport { Form, Button, Modal, InputGroup } from \"react-bootstrap\";\nimport Alert from \"react-bootstrap/Alert\";\nimport API from \"../../utils/api\";\nimport { googleLoginUrl, privateKey } from \"../../utils/googleOauth\";\nimport \"./style.css\";\n\nfunction SignUpForm() {\n  const [show, setShow] = useState(false);\n  const [copied, setCopied] = useState(false);\n  const [private_key, setPrivate] = useState(\"\");\n\n  // Alert states and functions\n  const [showCopyAlert, setCopyAlert] = useState(false);\n  const [showCopyAlertMessage, setShowCopyAlertMessage] = useState(\"\");\n  const [showAlert, setShowAlert] = useState(false);\n  const [showAlertMessage, setShowAlertMessage] = useState(\"\");\n  const handleCloseAlert = () => {\n    setShowAlert(false);\n    setShowAlertMessage(\"\");\n  };\n\n  const handleCopyClose = () => {\n    setCopyAlert(false);\n  };\n\n  const handleAlertMessage = (message) => {\n    if (message) {\n      setShowAlert(true);\n      setShowAlertMessage(message);\n    }\n  };\n  const handleShow = () => setShow(true);\n\n  useEffect(() => {\n    if (privateKey) {\n      setPrivate(privateKey);\n      handleShow();\n    }\n  }, []);\n\n  const handleClose = () => {\n    if (copied === true) {\n      setShow(false);\n      document.location.replace(\"/profile\");\n      setPrivate(\"\");\n    } else {\n      setCopyAlert(true);\n      setShowCopyAlertMessage(\"Please Copy your key!\");\n    }\n  };\n\n  const copyToClipboard = () => {\n    navigator.clipboard.writeText(private_key);\n    setCopied(true);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    const submitData = {\n      username: e.target[1].value,\n      password: e.target[2].value,\n      confirm_password: e.target[3].value,\n      email: e.target[0].value,\n      public_key: \"123456788999\",\n    };\n    API.signUp(submitData)\n      .then((res) => {\n        if (res.status === 200) {\n          setPrivate(res.data.message);\n          handleShow();\n        }\n      })\n      .catch((err) => {\n        switch (err.response.data.message) {\n          case \"Your Username should be at least 6 characters.\":\n            handleAlertMessage(err.response.data.message);\n            break;\n          case \"Your Password should be at least 6 characters.\":\n            handleAlertMessage(err.response.data.message);\n            break;\n          case \"Your password does not match.\":\n            handleAlertMessage(err.response.data.message);\n            break;\n          case \"Email already in use.\":\n            handleAlertMessage(err.response.data.message);\n            break;\n          case \"Username already in use.\":\n            handleAlertMessage(err.response.data.message);\n            break;\n          // edge case server error\n          case \"MongoDB error\":\n            handleAlertMessage(\n              \"Oops something went wrong. Please try again later.\"\n            );\n            break;\n          default:\n            handleAlertMessage(\"Please try, again!\");\n        }\n      });\n  };\n\n  return (\n    <>\n      <Alert\n        show={showAlert}\n        variant=\"warning\"\n        dismissible=\"true\"\n        onClose={() => {\n          handleCloseAlert();\n        }}\n      >\n        <p>{showAlertMessage}</p>\n      </Alert>\n\n      <div\n        className=\"sidebar-header\"\n        style={{ marginTop: 20, marginBottom: 30, color: \"whitesmoke\" }}\n      >\n        <h3>Sign-up</h3>\n      </div>\n\n      <Form onSubmit={(e) => handleSubmit(e)}>\n        <Form.Group controlId=\"formBasicEmail\">\n          <Form.Control type=\"email\" placeholder=\"Enter email\" />\n        </Form.Group>\n        <Form.Group controlId=\"formBasicUsername\">\n          <Form.Control type=\"text\" placeholder=\"Enter username\" />\n        </Form.Group>\n        <Form.Group controlId=\"formBasicPassword\">\n          <Form.Control type=\"password\" placeholder=\"Pasword\" />\n        </Form.Group>\n        <Form.Group controlId=\"formBasicConfirm\">\n          <Form.Control type=\"password\" placeholder=\"Confirm password\" />\n        </Form.Group>\n        <Button\n          type=\"submit\"\n          value=\"Submit\"\n          className=\"sidebutton\"\n          block\n          variant=\"outline-light\"\n        >\n          Sign-Up\n        </Button>\n      </Form>\n\n      {/* <div>\n        <h3>--- Or ---</h3>\n      </div> */}\n\n      {/* Need to add a type for button */}\n      {/* <Button\n                href={googleLoginUrl}\n                type=\"submit\"\n                value=\"Submit\"\n                className=\"sidebutton\"\n                block\n                variant=\"outline-light\"\n            >Sign-Up with Google\n                </Button> */}\n\n      <Modal\n        copied={copied}\n        show={show}\n        onHide={handleClose}\n        backdrop=\"static\"\n        keyboard={false}\n      >\n        <Modal.Header>\n          <Modal.Title>\n            <h3>Thank you for Signing Up!</h3>\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <h5>\n            Please keep your private key safe. This is the only time we will be\n            showing your private key.\n          </h5>\n          <Form.Group controlId=\"formPlaintextTotal\">\n            <Form.Label>\n              <p id=\"privateKey\">Private Key:</p>\n            </Form.Label>\n            <InputGroup>\n              <Form.Control\n                className=\"something\"\n                readOnly\n                value={private_key}\n              />\n              <InputGroup.Append>\n                <Button variant=\"outline-secondary\" onClick={copyToClipboard}>\n                  <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    width=\"16\"\n                    height=\"16\"\n                    fill=\"currentColor\"\n                    class=\"bi bi-clipboard\"\n                    viewBox=\"0 0 16 16\"\n                  >\n                    <path d=\"M4 1.5H3a2 2 0 0 0-2 2V14a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2V3.5a2 2 0 0 0-2-2h-1v1h1a1 1 0 0 1 1 1V14a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V3.5a1 1 0 0 1 1-1h1v-1z\" />\n                    <path d=\"M9.5 1a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5v-1a.5.5 0 0 1 .5-.5h3zm-3-1A1.5 1.5 0 0 0 5 1.5v1A1.5 1.5 0 0 0 6.5 4h3A1.5 1.5 0 0 0 11 2.5v-1A1.5 1.5 0 0 0 9.5 0h-3z\" />\n                  </svg>\n                </Button>\n              </InputGroup.Append>\n            </InputGroup>\n            <Alert\n              variant=\"warning\"\n              dismissible=\"true\"\n              onClose={handleCopyClose}\n              show={showCopyAlert}\n            >\n              <p>{showCopyAlertMessage}</p>\n            </Alert>\n          </Form.Group>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"primary\" onClick={handleClose}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n}\n\nexport default SignUpForm;\n","import React from 'react';\n\nconst SessionContext = React.createContext({\n    username: \"\",\n    publicKey: \"\",\n    logged_in: false,\n    setSession: () => {}\n});\n\nexport default SessionContext;","import React, { useState, useContext } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport Alert from \"react-bootstrap/Alert\";\nimport API from \"../../utils/api\";\nimport SessionContext from \"../../utils/sessionContext\";\n// import { googleLoginUrl } from \"../../utils/googleOauth\";\n\nfunction SignUpForm() {\n  const { setSession } = useContext(SessionContext);\n\n  // Alert states and functions\n  const [showAlert, setShowAlert] = useState(false);\n  const [showAlertMessage, setShowAlertMessage] = useState(\"\");\n  const handleCloseAlert = () => {\n    setShowAlert(false);\n    setShowAlertMessage(\"\");\n  };\n  const handleAlertMessage = (message) => {\n    if (message) {\n      setShowAlert(true);\n      setShowAlertMessage(message);\n    }\n  };\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    const submitData = {\n      username: e.target[0].value,\n      password: e.target[1].value,\n    };\n    API.logIn(submitData)\n      .then((res) => {\n        console.log(res); //use to debug\n        var username = res.data.user[0].username;\n        var publicKey = res.data.user[0].public_key;\n        var logged_in = true;\n        setSession({ username, publicKey, logged_in });\n        document.location.replace(\"/\");\n      })\n      .catch((err) => {\n        console.log(err.response);\n        // console.log(err.response.data.message); //use to debug\n        switch (err.response.data.message) {\n          case \"Server Error, Please try Again.\":\n            handleAlertMessage(\n              \"Oops something went wrong. Please try again later.\"\n            );\n            break;\n          default:\n            handleAlertMessage(\"Please check your username or password\");\n        }\n      });\n  }\n\n  return (\n    <>\n      <Alert\n        show={showAlert}\n        variant=\"warning\"\n        dismissible=\"true\"\n        onClose={() => {\n          handleCloseAlert();\n        }}\n      >\n        <p>{showAlertMessage}</p>\n      </Alert>\n\n      <div\n        className=\"sidebar-header\"\n        style={{ marginTop: 20, marginBottom: 30, color: \"whitesmoke\" }}\n      >\n        <h3>Login</h3>\n      </div>\n\n      <Form onSubmit={(e) => handleSubmit(e)}>\n        <Form.Group controlId=\"formBasicUsername\">\n          <Form.Control type=\"text\" placeholder=\"Enter username or email\" />\n        </Form.Group>\n        <Form.Group controlId=\"formBasicPassword\">\n          <Form.Control type=\"password\" placeholder=\"Pasword\" />\n        </Form.Group>\n        <Button\n          type=\"submit\"\n          className=\"sidebutton\"\n          block\n          variant=\"outline-light\"\n        >\n          Login\n        </Button>\n      </Form>\n\n      {/* <div>\n        <h3>--- Or ---</h3>\n      </div> */}\n\n      {/* Need to add a type for button */}\n      {/* <Button\n                href={googleLoginUrl}\n                type=\"submit\"\n                value=\"Submit\"\n                className=\"sidebutton\"\n                block\n                variant=\"outline-light\"\n            >Login with Google\n                </Button> */}\n    </>\n  );\n}\n\nexport default SignUpForm;\n","import React, { useContext, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Container, Navbar, Button, Nav } from \"react-bootstrap\";\nimport Sidenav from \"sidenavjs\";\nimport Sidebar from \"../Sidebar\";\nimport SignUpForm from \"../SignUp\";\nimport LoginForm from \"../Login\";\nimport \"./style.css\";\nimport SessionContext from \"../../utils/sessionContext\";\nimport API from \"../../utils/api\";\nimport { privateKey } from \"../../utils/googleOauth\";\n\nfunction Navigation() {\n  const { logged_in } = useContext(SessionContext);\n  const [sidebarOpen, setSidebarOpen] = useState(false);\n  const [loginComponent, setLoginComponent] = useState(\"menu\");\n\n  const handleLogout = () => {\n    API.logOut().then((res) => {\n      console.log(res);\n      document.location.replace(\"/\");\n    });\n  };\n\n  const onSetSidebarOpen = (open) => {\n    setSidebarOpen(open);\n  };\n  setTimeout(() => {\n    if (privateKey) {\n      onSetSidebarOpen(true);\n      setSidebarState(\"signUp\");\n    }\n  }, 2000);\n  const setSidebarState = (buttons) => {\n    setLoginComponent(buttons);\n  };\n  if (logged_in) {\n    return (\n      <SessionContext.Consumer>\n        {(state) => (\n          <>\n            <Sidenav\n              open={sidebarOpen}\n              onSetOpen={onSetSidebarOpen}\n              sidenav={\n                loginComponent === \"menu\" ? (\n                  <Sidebar />\n                ) : loginComponent === \"signUp\" ? (\n                  <SignUpForm />\n                ) : (\n                  <LoginForm {...state} />\n                )\n              }\n            >\n              <Navbar className=\"container-fluid mb-2 navigation\">\n                <Container>\n                  <Nav.Item>\n                    <Link className=\"navbar-brand\" to=\"/\">\n                      {/* <img\n                        id=\"logo\"\n                        src=\"./icons8-spartan-62.png\"\n                        alt=\"brand-logo\"\n                      /> */}\n                      SpartanCoin\n                    </Link>\n                  </Nav.Item>\n                  <Nav className=\"ml-auto\">\n                    <Nav.Item className=\"d-flex\">\n                      <Button\n                        id=\"logout\"\n                        variant=\"outline-light\"\n                        type=\"button\"\n                        onClick={handleLogout}\n                      >\n                        Logout\n                      </Button>\n                      <Button\n                        id=\"menu\"\n                        className=\"btn hamburger\"\n                        variant=\"outline-light\"\n                        type=\"button\"\n                        onClick={() => {\n                          onSetSidebarOpen(true);\n                          setSidebarState(\"menu\");\n                        }}\n                      >\n                        <svg\n                          xmlns=\"http://www.w3.org/2000/svg\"\n                          width=\"33\"\n                          height=\"33\"\n                          fill=\"currentColor\"\n                          className=\"bi bi-list hamburger\"\n                          viewBox=\"0 0 16 16\"\n                        >\n                          <path\n                            fillRule=\"evenodd\"\n                            d=\"M2.5 12a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5zm0-4a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5zm0-4a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5z\"\n                          />\n                        </svg>\n                      </Button>\n                    </Nav.Item>\n                  </Nav>\n                </Container>\n              </Navbar>\n            </Sidenav>\n          </>\n        )}\n      </SessionContext.Consumer>\n    );\n  }\n  return (\n    <SessionContext.Consumer>\n      {(state) => (\n        <>\n          <Sidenav\n            open={sidebarOpen}\n            onSetOpen={onSetSidebarOpen}\n            sidenav={\n              loginComponent === \"menu\" ? (\n                <Sidebar />\n              ) : loginComponent === \"signUp\" ? (\n                <SignUpForm />\n              ) : (\n                <LoginForm {...state} />\n              )\n            }\n          >\n            <Navbar className=\"container-fluid mb-2 mb-2 navigation\">\n              <Container>\n                <Nav.Item>\n                  <Link className=\"navbar-brand\" to=\"/\">\n                    {/* <img\n                      id=\"logo\"\n                      src=\"./icons8-spartan-62.png\"\n                      alt=\"brand-logo\"\n                    /> */}\n                    SpartanCoin\n                  </Link>\n                </Nav.Item>\n                <Nav.Item className=\"d-flex\">\n                  <Button\n                    id=\"signup\"\n                    type=\"button\"\n                    variant=\"outline-light\"\n                    onClick={() => {\n                      onSetSidebarOpen(true);\n                      setSidebarState(\"signUp\");\n                    }}\n                  >\n                    Sign-up\n                  </Button>\n                  <Button\n                    id=\"login\"\n                    type=\"button\"\n                    variant=\"outline-light\"\n                    onClick={() => {\n                      onSetSidebarOpen(true);\n                      setSidebarState(\"login\");\n                    }}\n                  >\n                    Login\n                  </Button>\n                </Nav.Item>\n              </Container>\n            </Navbar>\n          </Sidenav>\n        </>\n      )}\n    </SessionContext.Consumer>\n  );\n}\n\nexport default Navigation;\n","import React from \"react\";\nimport { Accordion, Card, Row, Col } from \"react-bootstrap\";\nimport { isMobile } from \"react-device-detect\";\nimport \"./style.css\";\n\nconst title = \"About\";\n\nconst body = (\n  <Row>\n    <Col md={8} className=\"cardBody\">\n      {\" \"}\n      <h1>{title}</h1>\n      <p>Welcome to SpartanCoin!</p>\n      <p>\n        SpartanCoin the newest Cryptocurrency is developed as a part of 295B!\n        The main advantages of cryptocurrency is the transactions are super\n        fast, digital, secure and worldwide. In essence it also allows to\n        maintain the records without the risk of data being pirated. Fraud is,\n        actually, greatly reduced. Want to learn more? See the \"Learn More\"\n        section below. Ready to get started? Click Sign Up!\n      </p>\n    </Col>\n    <Col md={4}>\n      <img\n        src={\"./assets/images/coin.png\"}\n        style={{ width: 400, height: 275 }}\n        className=\"image round\"\n        alt=\"Coin\"\n      />\n    </Col>\n  </Row>\n);\n\nfunction About() {\n  if (isMobile) {\n    return (\n      <Card className=\"mobileView\">\n        <Accordion.Toggle as={Card.Header} eventKey=\"0\">\n          {title}\n        </Accordion.Toggle>\n\n        <Accordion.Collapse eventKey=\"0\">\n          <Card.Body>{body}</Card.Body>\n        </Accordion.Collapse>\n      </Card>\n    );\n  } else {\n    return (\n      <Card className=\"desktopCard\">\n        <Card.Body>{body}</Card.Body>\n      </Card>\n    );\n  }\n}\n\nexport default About;\n","import React from \"react\";\nimport { Accordion, Card, Row, Col } from \"react-bootstrap\";\nimport { isMobile } from \"react-device-detect\";\nimport \"./style.css\";\n\nconst title = \"Learn More\";\n\nconst body = (\n  <Row>\n    <Col md={6}>\n      <img\n        src={\n          \"https://cdn.pixabay.com/photo/2018/01/17/20/22/analytics-3088958_960_720.jpg\"\n        }\n        className=\"image\"\n        alt=\"Learn More\"\n      />\n    </Col>\n    <Col md={6} className=\"cardBody\" id=\"learnCard\">\n      {\" \"}\n      <h1>{title}</h1>\n      <p>\n        Cryptocurrency which is also known as crypto is a digital currency used\n        as a medium of exchange. It uses cryptography (the practice of securing\n        communication under a third party) to secure, verify transactions and\n        also to control the creation of new units such as blocks of a particular\n        cryptocurrency. The strong characteristic feature of a cryptocurrency is\n        the fact that it is not controlled by any central authority. The\n        decentralized nature of the blockchain makes cryptocurrency\n        theoretically immune to the old ways of government control and\n        interference. Cryptocurrencies can be traded between two parties using\n        public and private keys.\n      </p>\n    </Col>\n  </Row>\n);\n\nfunction LearnMore() {\n  if (isMobile) {\n    return (\n      <Card className=\"mobileView\">\n        <Accordion.Toggle as={Card.Header} eventKey=\"1\">\n          {title}\n        </Accordion.Toggle>\n\n        <Accordion.Collapse eventKey=\"1\">\n          <Card.Body>{body}</Card.Body>\n        </Accordion.Collapse>\n      </Card>\n    );\n  } else {\n    return (\n      <Card className=\"desktopCard\">\n        <Card.Body>{body}</Card.Body>\n      </Card>\n    );\n  }\n}\n\nexport default LearnMore;\n","import React, { useContext, useState } from \"react\";\r\nimport { Accordion, Card, Row, Col, Button } from \"react-bootstrap\";\r\nimport { isMobile } from \"react-device-detect\";\r\nimport Sidenav from \"sidenavjs\";\r\nimport SessionContext from \"../../utils/sessionContext\";\r\nimport SignUpForm from \"../SignUp\";\r\nimport \"./style.css\";\r\n\r\nfunction GetStarted() {\r\n  const { logged_in } = useContext(SessionContext);\r\n  const [sidebarOpen, setSidebarOpen] = useState(false);\r\n  console.log(logged_in);\r\n\r\n  const onSetSidebarOpen = (open) => {\r\n    setSidebarOpen(open);\r\n  };\r\n\r\n  if (isMobile && logged_in) {\r\n    return (\r\n      <Card className=\"mobileView\">\r\n        <Accordion.Toggle as={Card.Header} eventKey=\"2\">\r\n          Get Started\r\n        </Accordion.Toggle>\r\n        <Accordion.Collapse eventKey=\"2\">\r\n          <Card.Body>\r\n            <Row style={{ textAlign: \"center\" }}>\r\n              <Col md={7} className=\"cardBody\">\r\n                <h1>Get Started</h1>\r\n                <p>\r\n                  Please Sign-Up to create your own account. After submitting\r\n                  the Sign-Up form, please be sure to keep your private key in a\r\n                  safe place. You need this private key for any peer-to-peer\r\n                  transactions. On the initial login you will notice that your\r\n                  account is empty, in order to fill your account with coins you\r\n                  will have to either mine the coins! Once you have a some coins\r\n                  in your wallet, you can start transactions.\r\n                </p>\r\n              </Col>\r\n              <Col md={5}>\r\n                <img\r\n                  src={\r\n                    \"https://cdn.pixabay.com/photo/2016/04/20/08/21/entrepreneur-1340649_960_720.jpg\"\r\n                  }\r\n                  className=\"image\"\r\n                  alt=\"Started\"\r\n                />\r\n              </Col>\r\n            </Row>\r\n          </Card.Body>\r\n        </Accordion.Collapse>\r\n      </Card>\r\n    );\r\n  } else if (isMobile) {\r\n    return (\r\n      <SessionContext.Consumer>\r\n        {(state) => (\r\n          <Sidenav\r\n            open={sidebarOpen}\r\n            onSetOpen={onSetSidebarOpen}\r\n            sidenav={<SignUpForm />}\r\n          >\r\n            <Card className=\"mobileView\">\r\n              <Accordion.Toggle as={Card.Header} eventKey=\"2\">\r\n                Get Started\r\n              </Accordion.Toggle>\r\n              <Accordion.Collapse eventKey=\"2\">\r\n                <Card.Body>\r\n                  <Row style={{ textAlign: \"center\" }}>\r\n                    <Col md={7} className=\"cardBody\">\r\n                      <h1>Get Started</h1>\r\n                      <p>\r\n                        Please Sign-Up to create your own account. After\r\n                        submitting the Sign-Up form, please be sure to keep your\r\n                        private key in a safe place. You need this private key\r\n                        for any peer-to-peer transactions. On the initial login\r\n                        you will notice that your account is empty, in order to\r\n                        fill your account with coins you will have to either\r\n                        mine the coins! Once you have a some coins in your\r\n                        wallet, you can start transactions.\r\n                      </p>\r\n                      <Button\r\n                        variant=\"dark\"\r\n                        onClick={() => setSidebarOpen(true)}\r\n                      >\r\n                        Sign Up !\r\n                      </Button>\r\n                    </Col>\r\n                    <Col md={5}>\r\n                      <img\r\n                        src={\r\n                          \"https://cdn.pixabay.com/photo/2016/04/20/08/21/entrepreneur-1340649_960_720.jpg\"\r\n                        }\r\n                        className=\"image\"\r\n                        alt=\"Started\"\r\n                      />\r\n                    </Col>\r\n                  </Row>\r\n                </Card.Body>\r\n              </Accordion.Collapse>\r\n            </Card>\r\n          </Sidenav>\r\n        )}\r\n      </SessionContext.Consumer>\r\n    );\r\n  } else if (logged_in) {\r\n    return (\r\n      <Card className=\"desktopCard\">\r\n        <Card.Body>\r\n          <Row style={{ textAlign: \"center\" }}>\r\n            <Col md={7} className=\"cardBody\">\r\n              <h1>Get Started</h1>\r\n              <p>\r\n                Please Sign-Up to create your own account. After submitting the\r\n                Sign-Up form, please be sure to keep your private key in a safe\r\n                place. You need this private key for any peer-to-peer\r\n                transactions. On the initial login you will notice that your\r\n                account is empty, in order to fill your account with coins you\r\n                will have to either mine the coins! Once you have a some coins\r\n                in your wallet, you can start transactions.\r\n              </p>\r\n            </Col>\r\n            <Col md={5}>\r\n              <img\r\n                src={\r\n                  \"https://cdn.pixabay.com/photo/2016/04/20/08/21/entrepreneur-1340649_960_720.jpg\"\r\n                }\r\n                className=\"image\"\r\n                alt=\"Started\"\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </Card.Body>\r\n      </Card>\r\n    );\r\n  } else {\r\n    return (\r\n      <SessionContext.Consumer>\r\n        {(state) => (\r\n          <Sidenav\r\n            open={sidebarOpen}\r\n            onSetOpen={onSetSidebarOpen}\r\n            sidenav={<SignUpForm />}\r\n          >\r\n            <Card className=\"desktopCard\">\r\n              <Card.Body>\r\n                <Row style={{ textAlign: \"center\" }}>\r\n                  <Col md={7} className=\"cardBody\">\r\n                    <h1>Get Started</h1>\r\n                    <p>\r\n                      Please Sign-Up to create your own account. After\r\n                      submitting the Sign-Up form, please be sure to keep your\r\n                      private key in a safe place. You need this private key for\r\n                      any peer-to-peer transactions. On the initial login you\r\n                      will notice that your account is empty, in order to fill\r\n                      your account with coins you will have to either mine the\r\n                      coins! Once you have a some coins in your wallet, you can\r\n                      start transactions.\r\n                    </p>\r\n                    <Button variant=\"dark\" onClick={() => setSidebarOpen(true)}>\r\n                      Sign Up !\r\n                    </Button>\r\n                  </Col>\r\n                  <Col md={5}>\r\n                    <img\r\n                      src={\r\n                        \"https://cdn.pixabay.com/photo/2016/04/20/08/21/entrepreneur-1340649_960_720.jpg\"\r\n                      }\r\n                      className=\"image\"\r\n                      alt=\"Started\"\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n              </Card.Body>\r\n            </Card>\r\n          </Sidenav>\r\n        )}\r\n      </SessionContext.Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GetStarted;\r\n","import React from \"react\";\r\nimport { Accordion } from \"react-bootstrap\";\r\nimport About from \"../About\";\r\nimport LearnMore from \"../LearnMore\";\r\nimport GetStarted from \"../GetStarted\";\r\n\r\nfunction Accords() {\r\n\r\n  \r\n  return (\r\n\r\n    <>\r\n      <Accordion defaultActiveKey=\"0\">\r\n        <About/>\r\n        <LearnMore/>\r\n        <GetStarted/>\r\n      </Accordion>\r\n    </>\r\n\r\n  )\r\n}\r\n\r\nexport default Accords;","import React from \"react\";\r\nimport Accords from \"../components/Accords\";\r\n\r\nfunction Home() {\r\n  return (\r\n    <>\r\n      <Accords />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Home;","import React, { useContext, useEffect, useState } from \"react\";\nimport {\n  Container,\n  Card,\n  InputGroup,\n  FormControl,\n  Button,\n  Form,\n} from \"react-bootstrap\";\nimport SessionContext from \"../../utils/sessionContext\";\nimport API from \"../../utils/api\";\nimport \"./style.css\";\n\n// Passprops to the wallet coins in order to render the amount associated to the public key.\n\nfunction WalletCoins() {\n  const { publicKey, username } = useContext(SessionContext);\n  const [coin, setCoin] = useState();\n  //   const [USD, setUSD] = useState();\n\n  useEffect(() => {\n    getUserBalance();\n  });\n\n  const getUserBalance = () => {\n    API.getAddressBalance(publicKey).then((res) => {\n      setCoin(res.data);\n      //   getUSD();\n    });\n  };\n  //   const getUSD = () => {\n  //     API.getUSD().then((res) => {\n  //       const value = res.data * coin;\n  //       setUSD(value.toFixed(2));\n  //     });\n  //   };\n\n  const copyToClipboard = () => {\n    navigator.clipboard.writeText(publicKey);\n  };\n  return (\n    <Container>\n      <Card body className=\"walletCoin\" style={{ textAlign: \"center\" }}>\n        <h3>Welcome, {username}!</h3>\n        <h3 style={{ float: \"left\" }}>Coin: {coin}</h3>\n      </Card>\n      <Card body className=\"walletCoin\" style={{ textAlign: \"center\" }}>\n        <Form.Label>\n          <h3>Public Key:</h3>\n        </Form.Label>\n        <InputGroup className=\"mb-3\">\n          <FormControl readOnly value={publicKey} />\n          <InputGroup.Append>\n            <Button onClick={copyToClipboard} variant=\"outline-secondary\">\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"16\"\n                height=\"16\"\n                fill=\"currentColor\"\n                class=\"bi bi-clipboard\"\n                viewBox=\"0 0 16 16\"\n              >\n                <path d=\"M4 1.5H3a2 2 0 0 0-2 2V14a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2V3.5a2 2 0 0 0-2-2h-1v1h1a1 1 0 0 1 1 1V14a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V3.5a1 1 0 0 1 1-1h1v-1z\" />\n                <path d=\"M9.5 1a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5v-1a.5.5 0 0 1 .5-.5h3zm-3-1A1.5 1.5 0 0 0 5 1.5v1A1.5 1.5 0 0 0 6.5 4h3A1.5 1.5 0 0 0 11 2.5v-1A1.5 1.5 0 0 0 9.5 0h-3z\" />\n              </svg>\n            </Button>\n          </InputGroup.Append>\n        </InputGroup>\n      </Card>\n    </Container>\n  );\n}\n\nexport default WalletCoins;\n","import React, { useContext, useState, useEffect } from \"react\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\nimport SessionContext from \"../../utils/sessionContext\";\nimport API from \"../../utils/api\";\nimport { Container, Card, Button } from \"react-bootstrap\";\nimport \"./style.css\";\n\n// Table is able to be styled. This is generic boostrap styling for MVP.\n\n// THIS IS PLACEHOLDER DATA. WE NEED TO PASS AN ARRAY OF OBJECTS WITH THE VALUES\n// CHANGE THE KEYS ACCORDINGLY TO WHAT THE BLOCKCHAIN PROVIDES\n// {\n//   \"fromAddress\": \"From\",\n//   \"toAddress\": \"Recipient\",\n//   \"timestamp\": \"Timestamp\",\n//   \"amount\": \"Amount\",\n//   \"label\": \"whatever\"\n// }\n\nfunction TransHist() {\n  const { publicKey, username } = useContext(SessionContext);\n  const [transactions, setTransactions] = useState([]);\n  const headerSortingStyle = { backgroundColor: \"#353535\", color: \"white\" };\n  const defaultSorted = [\n    {\n      dataField: \"timestamp\",\n      order: \"desc\",\n    },\n  ];\n  // ^^^ background color of column when clicked.\n\n  const timeConverter = (time) => {\n    const unixTime = time;\n    const dateObject = new Date(unixTime);\n    const dateFormat = dateObject.toLocaleString();\n    return dateFormat;\n  };\n\n  useEffect(() => {\n    API.getUserTransactions(publicKey)\n      .then((res) => {\n        let count = 0;\n        res.data.forEach((data) => {\n          data.key = count;\n          data.timestamp = timeConverter(data.timestamp);\n          if (data.fromAddress === publicKey) {\n            data.fromAddress = username;\n            data.amount = \" - \" + data.amount;\n            API.getUsername(data.toAddress).then((result) => {\n              //Fix the crash we had during the demo\n              if (!result.data.message) result.data.message = \"User not Found\";\n              data.toAddress = result.data.message;\n            });\n          }\n          if (data.toAddress === publicKey) {\n            data.toAddress = username;\n            data.amount = \" + \" + data.amount;\n            if (data.fromAddress) {\n              API.getUsername(data.fromAddress).then((result) => {\n                if (!result.data.message)\n                  result.data.message = \"User not Found\";\n                data.fromAddress = result.data.message;\n              });\n            } else {\n              data.fromAddress = \"System\";\n            }\n          }\n          count++;\n        });\n        return res.data;\n      })\n      .then((finalRes) => {\n        // Add a promise so we won't try to load the table before the data is ready\n        // Still add a small timeout because of nested getUsername API call\n        setTimeout(() => {\n          setTransactions(finalRes);\n        }, 1000);\n      });\n  }, [publicKey, username]);\n\n  const columns = [\n    {\n      dataField: \"fromAddress\",\n      text: \"From\",\n      sort: true,\n      headerSortingStyle,\n      sortCaret: (order, column) => {\n        if (!order)\n          return (\n            <span>\n              &nbsp;&nbsp;<i className=\"fas fa-sort-up\"></i>\n              <i className=\"fas fa-sort-down\"></i>\n            </span>\n          );\n        else if (order === \"asc\")\n          return (\n            <span>\n              &nbsp;&nbsp;<i className=\"fas fa-sort-up\"></i>\n              <i className=\"fas fa-sort-down active\"></i>\n            </span>\n          );\n        else if (order === \"desc\")\n          return (\n            <span>\n              &nbsp;&nbsp;<i className=\"fas fa-sort-up active\"></i>\n              <i className=\"fas fa-sort-down\"></i>\n            </span>\n          );\n        return null;\n      },\n    },\n    {\n      dataField: \"toAddress\",\n      text: \"Recipient\",\n      sort: true,\n      headerSortingStyle,\n      sortCaret: (order, column) => {\n        if (!order)\n          return (\n            <span>\n              &nbsp;&nbsp;<i className=\"fas fa-sort-up\"></i>\n              <i className=\"fas fa-sort-down\"></i>\n            </span>\n          );\n        else if (order === \"asc\")\n          return (\n            <span>\n              &nbsp;&nbsp;<i className=\"fas fa-sort-up\"></i>\n              <i className=\"fas fa-sort-down active\"></i>\n            </span>\n          );\n        else if (order === \"desc\")\n          return (\n            <span>\n              &nbsp;&nbsp;<i className=\"fas fa-sort-up active\"></i>\n              <i className=\"fas fa-sort-down\"></i>\n            </span>\n          );\n        return null;\n      },\n    },\n    {\n      dataField: \"amount\",\n      text: \"Amount\",\n      sort: true,\n      headerSortingStyle,\n      sortCaret: (order, column) => {\n        if (!order)\n          return (\n            <span>\n              &nbsp;&nbsp;<i className=\"fas fa-sort-up\"></i>\n              <i className=\"fas fa-sort-down\"></i>\n            </span>\n          );\n        else if (order === \"asc\")\n          return (\n            <span>\n              &nbsp;&nbsp;<i className=\"fas fa-sort-up\"></i>\n              <i className=\"fas fa-sort-down active\"></i>\n            </span>\n          );\n        else if (order === \"desc\")\n          return (\n            <span>\n              &nbsp;&nbsp;<i className=\"fas fa-sort-up active\"></i>\n              <i className=\"fas fa-sort-down\"></i>\n            </span>\n          );\n        return null;\n      },\n    },\n    {\n      dataField: \"timestamp\",\n      text: \"Timestamp\",\n      sort: true,\n      headerSortingStyle,\n      sortCaret: (order, column) => {\n        if (!order)\n          return (\n            <span>\n              &nbsp;&nbsp;<i className=\"fas fa-sort-up\"></i>\n              <i className=\"fas fa-sort-down\"></i>\n            </span>\n          );\n        else if (order === \"asc\")\n          return (\n            <span>\n              &nbsp;&nbsp;<i className=\"fas fa-sort-up\"></i>\n              <i className=\"fas fa-sort-down active\"></i>\n            </span>\n          );\n        else if (order === \"desc\")\n          return (\n            <span>\n              &nbsp;&nbsp;<i className=\"fas fa-sort-up active\"></i>\n              <i className=\"fas fa-sort-down\"></i>\n            </span>\n          );\n        return null;\n      },\n    },\n  ];\n\n  const expandRow = {\n    renderer: (row) => (\n      <div>\n        <p>{row.label}</p>\n      </div>\n    ),\n    showExpandColumn: true,\n    expandHeaderColumnRenderer: ({ isAnyExpands }) => {\n      if (isAnyExpands) {\n        return <b>-</b>;\n      }\n      return <b>+</b>;\n    },\n    expandColumnRenderer: ({ expanded }) => {\n      if (expanded) {\n        return <b>-</b>;\n      }\n      return <b>...</b>;\n    },\n  };\n  if (transactions.length === 0) {\n    return (\n      <Container className=\"buttonSize\">\n        <Card\n          body\n          style={{\n            textAlign: \"center\",\n            backgroundColor: \"#D9D9D9\",\n            color: \"#353535\",\n            height: 400,\n          }}\n        >\n          <h3>You have no Transactions yet!</h3>\n          <p>\n            Lets get going on this! Start by clicking one of the buttons below!\n          </p>\n          {/* <Button href=\"/buy\" style={{marginTop: 20, marginLeft: 20}}>Buy Coin</Button> */}\n          <Button href=\"/mining\" style={{ marginTop: 20, marginLeft: 20 }}>\n            Mine Coin\n          </Button>\n        </Card>\n      </Container>\n    );\n  } else {\n    return (\n      <>\n        <Container className=\"tableSize\">\n          <BootstrapTable\n            className=\"table\"\n            style={{ textAlign: \"center\" }}\n            keyField=\"key\"\n            data={transactions}\n            columns={columns}\n            expandRow={expandRow}\n            pagination={paginationFactory()}\n            defaultSorted={defaultSorted}\n            striped\n            hover\n            condensed\n          />\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default TransHist;\n","import React from \"react\";\nimport WalletCoins from \"../components/WalletCoins\";\nimport TransHist from \"../components/TransHist\";\n\n\nfunction Profile() {\n  return (\n    <>\n      <WalletCoins />\n      <TransHist />\n    </>\n  )\n}\n\nexport default Profile;","import React, { useContext, useEffect, useRef, useState } from \"react\";\nimport {\n  Form,\n  Col,\n  Row,\n  Container,\n  Button,\n  Card,\n  Alert,\n} from \"react-bootstrap\";\nimport SessionContext from \"../../utils/sessionContext\";\nimport API from \"../../utils/api\";\nimport \"./style.css\";\n\nfunction SendForm() {\n  const formHandle = useRef();\n  const cost = useRef(0);\n  const { publicKey } = useContext(SessionContext);\n  const [coinVal, setCoinVal] = useState(0);\n  const [coinAmount, setCoinAmount] = useState(0);\n  const [toggle, setToggle] = useState(false);\n  const [usdVal, setUSDVal] = useState(0);\n  const [usdAmount, setUSDAmount] = useState(0);\n  const [fees, setFees] = useState(0);\n  const [total, setTotal] = useState(0);\n  const [showAlert, setShowAlert] = useState(false);\n  const [showAlertMessage, setShowAlertMessage] = useState(\"\");\n  const [showAlertVariant, setShowAlertVariant] = useState(\"danger\");\n\n  useEffect(() => {\n    API.getUSD().then((res) => {\n      setCoinVal(res.data);\n      const div = 1 / res.data;\n      setUSDVal(div);\n    });\n  });\n\n  const handleAlertMessage = (message, variant) => {\n    if (message) {\n      setShowAlert(true);\n      setShowAlertMessage(message);\n      setShowAlertVariant(variant);\n    }\n  };\n\n  const handleCloseAlert = () => {\n    setShowAlert(false);\n    setShowAlertMessage(\"\");\n  };\n  //Input is coins\n  const getValue = (amount) => {\n    amount = parseInt(amount);\n    // const value = amount * coinVal;\n    const fee = amount / 100;\n\n    setUSDAmount(1);\n    setFees(fee);\n    const total = amount * coinVal + fee;\n    setTotal(total);\n  };\n\n  //Input is USD\n  const getUSD = (usd) => {\n    const value = usd * usdVal;\n    setCoinAmount(value);\n    const fee = value / 100;\n    setFees(fee);\n    const total = value + fee;\n    setTotal(total);\n  };\n\n  const toggleListener = (boolean, val = 0) => {\n    if (boolean) {\n      setToggle(true);\n      getValue(val);\n    } else {\n      setToggle(false);\n      getUSD(val);\n    }\n  };\n\n  const submitForm = (e) => {\n    e.preventDefault();\n    const data = [...formHandle.current].reduce((obj, input) => {\n      obj[input.getAttribute(\"id\")] = input.value;\n      return obj;\n    }, {});\n    data.from = publicKey;\n    console.log(data);\n    console.log(Object.values(data).reduce((a, c) => a && !!c, true));\n    if (\n      !Object.values(data).reduce((result, value) => result && !!value, true)\n    ) {\n      handleAlertMessage(\"Fill out the entire form\", \"danger\");\n      return;\n    }\n    console.log(formHandle.current);\n    console.log(formHandle.current[0].value);\n    API.sendTransaction(data)\n      .then((res) => {\n        document.getElementById(\"sendForm\").reset();\n        handleAlertMessage(\"Transaction successful.\", \"success\");\n      })\n      .catch((err) => {\n        handleAlertMessage(err.response.data.message, \"danger\");\n      });\n  };\n\n  return (\n    <Container>\n      <Card className=\"cardStyle\" style={{ padding: 50 }}>\n        <Alert\n          show={showAlert}\n          variant={showAlertVariant}\n          onClose={() => {\n            handleCloseAlert();\n          }}\n        >\n          <p>{showAlertMessage}</p>\n        </Alert>\n        <Form ref={formHandle} id=\"sendForm\">\n          <Form.Group as={Row} controlId=\"to\">\n            <Col style={{ marginTop: 5 }} md={{ span: 7, offset: 2 }}>\n              <Form.Control\n                className=\"inputBox\"\n                type=\"text\"\n                placeholder=\"Recipient (Public Key)\"\n              />\n            </Col>\n          </Form.Group>\n          <Form.Group as={Row} controlId=\"private\">\n            <Col style={{ marginTop: 5 }} md={{ span: 7, offset: 2 }}>\n              <Form.Control\n                className=\"inputBox\"\n                type=\"text\"\n                placeholder=\"Private Key\"\n              />\n            </Col>\n          </Form.Group>\n          <Form.Group as={Row} controlId=\"label\">\n            <Col style={{ marginTop: 5 }} md={{ span: 7, offset: 2 }}>\n              <Form.Control\n                className=\"inputBox\"\n                type=\"text\"\n                placeholder=\"Description\"\n              />\n            </Col>\n          </Form.Group>\n\n          <Form.Group as={Row} controlId=\"cost\">\n            <Form.Label style={{ marginTop: 5 }} column md={4}>\n              Amount USD:\n            </Form.Label>\n            <Col style={{ marginTop: 5 }} md={{ span: 4, offset: 4 }}>\n              {toggle ? (\n                <Form.Control\n                  className=\"inputBox\"\n                  type=\"text\"\n                  onFocus={(e) => toggleListener(false, e.target.value)}\n                  value={usdAmount}\n                />\n              ) : (\n                <Form.Control\n                  className=\"inputBox\"\n                  type=\"text\"\n                  onChange={(e) => getUSD(e.target.value)}\n                />\n              )}\n            </Col>\n          </Form.Group>\n          <Form.Group as={Row} controlId=\"amount\">\n            <Form.Label style={{ marginTop: 5 }} column md={4}>\n              Amount SpartanCoin:\n            </Form.Label>\n            <Col style={{ marginTop: 5 }} md={{ span: 4, offset: 4 }}>\n              {toggle ? (\n                <Form.Control\n                  className=\"inputBox\"\n                  ref={cost}\n                  type=\"text\"\n                  onChange={(e) => getValue(e.target.value)}\n                />\n              ) : (\n                <Form.Control\n                  className=\"inputBox\"\n                  ref={cost}\n                  type=\"text\"\n                  onFocus={(e) => toggleListener(true, e.target.value)}\n                  value={coinAmount}\n                />\n              )}\n            </Col>\n          </Form.Group>\n          <Form.Group as={Row} controlId=\"formPlaintextTransFees\">\n            <Form.Label style={{ marginTop: 5 }} column md={4}>\n              Trans Fees 1%:\n            </Form.Label>\n            <Col style={{ marginTop: 5 }} md={{ span: 4, offset: 4 }}>\n              <Form.Control readOnly value={fees} />\n            </Col>\n          </Form.Group>\n          <Form.Group as={Row} controlId=\"formPlaintextTotal\">\n            <Form.Label style={{ marginTop: 5 }} column md={4}>\n              Total SpartanCoin:\n            </Form.Label>\n            <Col style={{ marginTop: 5 }} md={{ span: 4, offset: 4 }}>\n              <Form.Control readOnly value={total} />\n            </Col>\n          </Form.Group>\n          <Form.Group as={Row}>\n            <Col style={{ marginTop: 5 }} md={{ span: 10, offset: 5 }}></Col>\n          </Form.Group>\n        </Form>\n        <Button type=\"button\" onClick={submitForm}>\n          Continue\n        </Button>\n      </Card>\n    </Container>\n  );\n}\n\nexport default SendForm;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { Container, Card } from \"react-bootstrap\";\nimport SessionContext from \"../../utils/sessionContext\";\nimport API from \"../../utils/api\";\nimport \"./style.css\";\n\n// Passprops to the wallet coins in order to render the amount associated to the public key.\n\nfunction WalletCoinsUser() {\n  const { publicKey } = useContext(SessionContext);\n  const [coin, setCoin] = useState();\n  //   const [USD, setUSD] = useState();\n\n  useEffect(() => {\n    getUserBalance();\n  });\n\n  const getUserBalance = () => {\n    API.getAddressBalance(publicKey).then((res) => {\n      setCoin(res.data);\n      //   getUSD();\n    });\n  };\n\n  //   const getUSD = () => {\n  //     API.getUSD().then((res) => {\n  //       const value = res.data * coin;\n  //       setUSD(value.toFixed(2));\n  //     });\n  //   };\n\n  return (\n    <Container>\n      <Card className=\"walletCard\" body style={{ textAlign: \"center\" }}>\n        <h2>Send Coins</h2>\n        <h3 style={{ float: \"left\" }}>Coin: {coin} </h3>\n        {/* <h3 style={{float: 'right'}}>USD: ${USD}</h3> */}\n      </Card>\n    </Container>\n  );\n}\n\nexport default WalletCoinsUser;\n","import React from \"react\";\nimport SendForm from \"../components/SendForm\";\nimport WalletCoinsUser from \"../components/WalletCoinsSend\";\n\nfunction Send() {\n  return (\n    <>\n        <WalletCoinsUser />\n        <SendForm />\n    </>\n  )\n}\n\nexport default Send;","import React, { useState, useRef } from \"react\";\nimport { Card, Button, Modal, Container } from \"react-bootstrap\";\nimport API from \"../../utils/api\";\nimport \"./style.css\";\n\nfunction MiningHero() {\n  const [timer, setTimer] = useState(0);\n  const [isActive, setIsActive] = useState(false);\n  const countRef = useRef(null);\n  const [show, setShow] = useState(false);\n  const [showFail, setShowFail] = useState(false);\n\n  const handleClose = () => setShow(false);\n  const handleCloseFail = () => setShowFail(false);\n\n  const handleStart = () => {\n    setIsActive(true);\n    countRef.current = setInterval(() => {\n      setTimer((timer) => timer + 1);\n    }, 1000);\n    API.startMining()\n      .then((res) => {\n        clearInterval(countRef.current);\n        setIsActive(false);\n        setShow(true);\n        setTimer(0);\n        console.log(res.data);\n      })\n      .catch(() => {\n        clearInterval(countRef.current);\n        setIsActive(false);\n        setShowFail(true);\n        setTimer(0);\n      });\n  };\n  const formatTime = () => {\n    const getSeconds = `0${timer % 60}`.slice(-2);\n    const minutes = `${Math.floor(timer / 60)}`;\n    const getMinutes = `0${minutes % 60}`.slice(-2);\n\n    return `${getMinutes} : ${getSeconds}`;\n  };\n\n  return (\n    <>\n      {/* Need to change size of image/card */}\n      {/* <Card.Img variant=\"\" src='./assets/MiningGif.gif' /> */}\n      <Card className=\"text-center\">\n        <Card.Body className=\"justify-content-center\">\n          <Card.Text>\n            Mining is gaining cryptocurrencies by solving cryptographic\n            equations through the use of computers. This process involves\n            validating data blocks and adding transaction records to a public\n            record (ledger) known as a blockchain. Your machine will\n            automatically attempt to solve the equation, if correct, the reward\n            is yours. To start, click the Start Mine button below.\n          </Card.Text>\n          {!isActive ? (\n            <Button\n              variant=\"dark\"\n              style={{ width: \"25%\" }}\n              onClick={() => handleStart()}\n            >\n              Start Mining\n            </Button>\n          ) : (\n            <Container className=\"timerWrap\">\n              <p className=\"timer\">{formatTime()}</p>\n            </Container>\n          )}\n        </Card.Body>\n      </Card>\n      {/* Successfully Mined modal */}\n      <Modal\n        show={show}\n        onHide={handleClose}\n        backdrop=\"static\"\n        keyboard={false}\n      >\n        <Modal.Header>\n          <Modal.Title>\n            <h3>Mining Success!</h3>\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <h3 className=\"mineIcon\">⛏️</h3>\n          <strong>\n            <h3>Sucess!</h3>\n          </strong>\n          <p>\n            A mining reward of <strong>100 Cryptocoins</strong> was credited to\n            your account.\n          </p>\n          <p>Thanks for mining!</p>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button onClick={handleClose}>Close</Button>\n        </Modal.Footer>\n      </Modal>\n\n      {/* Failed Mined modal */}\n      <Modal\n        show={showFail}\n        onHide={handleCloseFail}\n        backdrop=\"static\"\n        keyboard={false}\n      >\n        <Modal.Header>\n          <Modal.Title>\n            <h3>Mining unsuccessful!</h3>\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <h3 className=\"mineIcon\">⛏️</h3>\n          <p>Someone else mined the transaction.</p>\n          <p>Thanks for mining. Please, try again!</p>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button onClick={handleCloseFail}>Close</Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n}\n\nexport default MiningHero;\n","import React from 'react';\nimport MiningHero from '../components/MiningHero';\n\n\nfunction MiningPage() {\n    return (\n        <>\n        <MiningHero/>\n        </>\n    )\n}\n\nexport default MiningPage;","import React from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport \"./style.css\";\n\nfunction Footer() {\n  return (\n    <div>\n      <Card id=\"footer\" className=\"text-center\" bg=\"dark\" text=\"white\">\n        <Card.Body>\n          <Card.Text>\n            SpartanCoin created by :\n            <a\n              href=\"https://github.com\"\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              {\" \"}\n              Aditya Inampudi{\" \"}\n            </a>{\" \"}\n            |\n            <a\n              href=\"https://github.com/Vedakshay\"\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              Rakesh Nagarajappa{\" \"}\n            </a>{\" \"}\n            |\n            <a\n              href=\"https://github.com/\"\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              Shivendra Kumar\n            </a>{\" \"}\n            |\n            <a\n              href=\"https://github.com/Rakesh8\"\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              {\" \"}\n              Vedakshay Jandhyala\n            </a>\n          </Card.Text>\n        </Card.Body>\n      </Card>\n    </div>\n  );\n}\n\nexport default Footer;\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Navigation from \"./components/Navbar\";\nimport Home from \"./pages/Home\";\nimport Profile from \"./pages/Profile\";\n// import Buy from \"./pages/Buy\";\nimport Send from \"./pages/Send\";\nimport Mining from \"./pages/Mining\";\nimport { Container } from \"react-bootstrap\";\nimport SessionContext from \"./utils/sessionContext\";\nimport Footer from \"./components/Footer\";\nimport API from \"./utils/api\";\nimport \"./app.css\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.setSession = ({ username, publicKey, logged_in }) => {\n      // console.log(username, publicKey, logged_in);\n      this.setState((state) => ({\n        username: username,\n        publicKey: publicKey,\n        logged_in: logged_in,\n      }));\n    };\n\n    this.state = {\n      setSession: this.setSession,\n    };\n  }\n\n  componentDidMount() {\n    if (!this.state.logged_in) {\n      API.getSessions().then((res) => {\n        console.log(res);\n        if (res.data.logged_in) {\n          this.setSession(res.data);\n        }\n      });\n    }\n  }\n\n  render() {\n    return (\n      <SessionContext.Provider value={this.state}>\n        <Router>\n          <Navigation />\n          <Container>\n            <Switch>\n              <Route exact path=\"/\" component={Home} />\n              <Route exact path=\"/profile\" component={Profile} />\n              {/* <Route exact path=\"/buy\" component={Buy} /> */}\n              <Route exact path=\"/send\" component={Send} />\n              <Route exact path=\"/mining\" component={Mining} />\n            </Switch>\n          </Container>\n          <Footer />\n        </Router>\n      </SessionContext.Provider>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}